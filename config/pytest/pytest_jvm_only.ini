[tool:pytest]
# Configuration pytest pour tests JVM/JPype isolés - Phase 1
# Objectif : Stabiliser +20-25 tests JVM vers 90% de réussite

# Marqueurs de tests
markers =
    jvm: Tests nécessitant JVM/JPype fonctionnel
    jpype: Tests spécifiques à JPype
    tweety: Tests utilisant TweetyProject
    real_jpype: Tests nécessitant vraie JVM (pas de mock)
    integration_jvm: Tests d'intégration avec JVM
    skip_jvm_isolation: Tests à ignorer pendant l'isolation JVM

# Filtres pour tests JVM uniquement
testpaths = tests/
filterwarnings =
    ignore::DeprecationWarning:jpype.*
    ignore::RuntimeWarning:jpype.*
    ignore::UserWarning:semantic_kernel.*
    ignore::FutureWarning:numpy.*

# Configuration logging pour diagnostic JVM
log_level = INFO
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] [JVM-TEST] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout pour éviter les blocages JVM
timeout = 300

# Variables d'environnement pour tests JVM
env =
    PYTEST_CURRENT_TEST=true
    JVM_ISOLATION_PHASE=1
    DISABLE_WEB_API_INIT=true

# Collection spécifique JVM
python_files = test_*.py *_test.py
python_classes = Test* *Test* *Tests
python_functions = test_*

# Configuration JVM spécifique
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    -k "jvm or jpype or tweety"
    --ignore=tests/integration/test_logic_api_integration.py
    --maxfail=50