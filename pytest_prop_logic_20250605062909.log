============================= test session starts =============================
platform win32 -- Python 3.9.12, pytest-8.4.0, pluggy-1.6.0
rootdir: D:\2025-Epita-Intelligence-Symbolique-4
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, mock-3.14.1
asyncio: mode=auto, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
collected 13 items

tests\agents\core\logic\test_propositional_logic_agent.py FF.F.......F.  [100%]

================================== FAILURES ===================================
___________ TestPropositionalLogicAgent.test_execute_query_accepted ___________

self = <test_propositional_logic_agent.TestPropositionalLogicAgent testMethod=test_execute_query_accepted>

    def test_execute_query_accepted(self):
        """Test de l'ex�cution d'une requ�te accept�e."""
        belief_set_obj = PropositionalBeliefSet("a => b")
        if not os.environ.get('USE_REAL_JPYPE', 'false').lower() in ('true', '1'):
            # Assurer que le mock retourne la cha�ne attendue par l'agent pour ce test
            self.mock_tweety_bridge_instance.execute_pl_query.return_value = "Tweety Result: Query 'a => b' is ACCEPTED (True)."
            self.mock_tweety_bridge_instance.validate_formula.return_value = (True, "Formule valide")
    
        result, message = self.agent.execute_query(belief_set_obj, "a => b")
    
        self.mock_tweety_bridge_instance.validate_formula.assert_called_once_with(formula_string="a => b")
        self.mock_tweety_bridge_instance.execute_pl_query.assert_called_once_with(
            belief_set_content="a => b",
            query_string="a => b"
        )
    
        # Avec la vraie JVM, le r�sultat devrait �tre True et le message format� correctement.
>       self.assertTrue(result)
E       AssertionError: None is not true

tests\agents\core\logic\test_propositional_logic_agent.py:196: AssertionError
---------------------------- Captured stdout setup ----------------------------
2025-06-05 06:29:13,606 - tests.mocks.jpype_setup - INFO - Test test_execute_query_accepted utilise MOCK JPype.
2025-06-05 06:29:13,606 - tests.mocks.jpype_setup - INFO - �tat (_jvm_started, _jvm_path, config.jvm_path) du mock JPype r�initialis� pour le test.
---------------------------- Captured stderr call -----------------------------
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Configuration des composants pour TestPLAgent...
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] TweetyBridge initialis� pour TestPLAgent. JVM pr�te: True
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.TextToPLBeliefSet ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.GeneratePLQueries ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.InterpretPLResults ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Composants pour TestPLAgent configur�s.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Ex�cution de la requ�te PL: 'a => b' sur le BeliefSet.
06:29:13 [ERROR] [agent.PropositionalLogicAgent.TestPLAgent] Erreur lors de l'ex�cution de la requ�te PL 'a => b': too many values to unpack (expected 2)
Traceback (most recent call last):
  File "D:\2025-Epita-Intelligence-Symbolique-4\argumentation_analysis\agents\core\logic\propositional_logic_agent.py", line 258, in execute_query
    is_entailed, raw_output_str = self._tweety_bridge.execute_pl_query( # Utilisez raw_output_str ici
ValueError: too many values to unpack (expected 2)
------------------------------ Captured log call ------------------------------
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:90 Configuration des composants pour TestPLAgent...
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:96 TweetyBridge initialis� pour TestPLAgent. JVM pr�te: True
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.TextToPLBeliefSet ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.GeneratePLQueries ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.InterpretPLResults ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:139 Composants pour TestPLAgent configur�s.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:248 Ex�cution de la requ�te PL: 'a => b' sur le BeliefSet.
ERROR    agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:281 Erreur lors de l'ex�cution de la requ�te PL 'a => b': too many values to unpack (expected 2)
Traceback (most recent call last):
  File "D:\2025-Epita-Intelligence-Symbolique-4\argumentation_analysis\agents\core\logic\propositional_logic_agent.py", line 258, in execute_query
    is_entailed, raw_output_str = self._tweety_bridge.execute_pl_query( # Utilisez raw_output_str ici
ValueError: too many values to unpack (expected 2)
-------------------------- Captured stdout teardown ---------------------------
2025-06-05 06:29:13,775 - tests.mocks.jpype_setup - INFO - �tat de JPype restaur� apr�s test test_execute_query_accepted (utilisation du mock).
_________ TestPropositionalLogicAgent.test_execute_query_error_tweety _________

self = <test_propositional_logic_agent.TestPropositionalLogicAgent testMethod=test_execute_query_error_tweety>

    def test_execute_query_error_tweety(self):
        """Test de l'ex�cution d'une requ�te avec erreur de Tweety."""
        belief_set_obj = PropositionalBeliefSet("a => b")
        if not os.environ.get('USE_REAL_JPYPE', 'false').lower() in ('true', '1'):
            # Assurer que le mock retourne la cha�ne attendue par l'agent pour ce test
            self.mock_tweety_bridge_instance.execute_pl_query.return_value = "FUNC_ERROR: Erreur de syntaxe Tweety"
            self.mock_tweety_bridge_instance.validate_formula.return_value = (True, "Formule valide")
    
        result, message = self.agent.execute_query(belief_set_obj, "a")
    
        self.mock_tweety_bridge_instance.validate_formula.assert_called_once_with(formula_string="a")
        self.mock_tweety_bridge_instance.execute_pl_query.assert_called_once_with(
            belief_set_content="a => b",
            query_string="a"
        )
    
        # Avec la vraie JVM, 'a' est rejet� par 'a => b'.
        self.assertFalse(result) # 'a' n'est pas une cons�quence de 'a => b', donc result est False.
>       self.assertEqual(message, "Tweety Result: Query 'a' is REJECTED (False).")
E       AssertionError: "FUNC_ERROR: Erreur lors de l'ex�cution de[54 chars]d 2)" != "Tweety Result: Query 'a' is REJECTED (False)."
E       - FUNC_ERROR: Erreur lors de l'ex�cution de la requ�te PL 'a': too many values to unpack (expected 2)
E       + Tweety Result: Query 'a' is REJECTED (False).

tests\agents\core\logic\test_propositional_logic_agent.py:235: AssertionError
---------------------------- Captured stdout setup ----------------------------
2025-06-05 06:29:13,776 - tests.mocks.jpype_setup - INFO - Test test_execute_query_error_tweety utilise MOCK JPype.
2025-06-05 06:29:13,776 - tests.mocks.jpype_setup - INFO - �tat (_jvm_started, _jvm_path, config.jvm_path) du mock JPype r�initialis� pour le test.
---------------------------- Captured stderr call -----------------------------
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Configuration des composants pour TestPLAgent...
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] TweetyBridge initialis� pour TestPLAgent. JVM pr�te: True
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.TextToPLBeliefSet ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.GeneratePLQueries ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.InterpretPLResults ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Composants pour TestPLAgent configur�s.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Ex�cution de la requ�te PL: 'a' sur le BeliefSet.
06:29:13 [ERROR] [agent.PropositionalLogicAgent.TestPLAgent] Erreur lors de l'ex�cution de la requ�te PL 'a': too many values to unpack (expected 2)
Traceback (most recent call last):
  File "D:\2025-Epita-Intelligence-Symbolique-4\argumentation_analysis\agents\core\logic\propositional_logic_agent.py", line 258, in execute_query
    is_entailed, raw_output_str = self._tweety_bridge.execute_pl_query( # Utilisez raw_output_str ici
ValueError: too many values to unpack (expected 2)
------------------------------ Captured log call ------------------------------
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:90 Configuration des composants pour TestPLAgent...
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:96 TweetyBridge initialis� pour TestPLAgent. JVM pr�te: True
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.TextToPLBeliefSet ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.GeneratePLQueries ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.InterpretPLResults ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:139 Composants pour TestPLAgent configur�s.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:248 Ex�cution de la requ�te PL: 'a' sur le BeliefSet.
ERROR    agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:281 Erreur lors de l'ex�cution de la requ�te PL 'a': too many values to unpack (expected 2)
Traceback (most recent call last):
  File "D:\2025-Epita-Intelligence-Symbolique-4\argumentation_analysis\agents\core\logic\propositional_logic_agent.py", line 258, in execute_query
    is_entailed, raw_output_str = self._tweety_bridge.execute_pl_query( # Utilisez raw_output_str ici
ValueError: too many values to unpack (expected 2)
-------------------------- Captured stdout teardown ---------------------------
2025-06-05 06:29:13,783 - tests.mocks.jpype_setup - INFO - �tat de JPype restaur� apr�s test test_execute_query_error_tweety (utilisation du mock).
___________ TestPropositionalLogicAgent.test_execute_query_rejected ___________

self = <test_propositional_logic_agent.TestPropositionalLogicAgent testMethod=test_execute_query_rejected>

    def test_execute_query_rejected(self):
        """Test de l'ex�cution d'une requ�te rejet�e."""
        belief_set_obj = PropositionalBeliefSet("a => b")
        if not os.environ.get('USE_REAL_JPYPE', 'false').lower() in ('true', '1'):
            # Assurer que le mock retourne la cha�ne attendue par l'agent pour ce test
            self.mock_tweety_bridge_instance.execute_pl_query.return_value = "Tweety Result: Query 'c' is REJECTED (False)."
            self.mock_tweety_bridge_instance.validate_formula.return_value = (True, "Formule valide")
    
        result, message = self.agent.execute_query(belief_set_obj, "c")
    
        self.mock_tweety_bridge_instance.validate_formula.assert_called_once_with(formula_string="c")
        self.mock_tweety_bridge_instance.execute_pl_query.assert_called_once_with(
            belief_set_content="a => b",
            query_string="c"
        )
        self.assertFalse(result)
>       self.assertEqual(message, "Tweety Result: Query 'c' is REJECTED (False).")
E       AssertionError: "FUNC_ERROR: Erreur lors de l'ex�cution de[54 chars]d 2)" != "Tweety Result: Query 'c' is REJECTED (False)."
E       - FUNC_ERROR: Erreur lors de l'ex�cution de la requ�te PL 'c': too many values to unpack (expected 2)
E       + Tweety Result: Query 'c' is REJECTED (False).

tests\agents\core\logic\test_propositional_logic_agent.py:215: AssertionError
---------------------------- Captured stdout setup ----------------------------
2025-06-05 06:29:13,787 - tests.mocks.jpype_setup - INFO - Test test_execute_query_rejected utilise MOCK JPype.
2025-06-05 06:29:13,787 - tests.mocks.jpype_setup - INFO - �tat (_jvm_started, _jvm_path, config.jvm_path) du mock JPype r�initialis� pour le test.
---------------------------- Captured stderr call -----------------------------
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Configuration des composants pour TestPLAgent...
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] TweetyBridge initialis� pour TestPLAgent. JVM pr�te: True
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.TextToPLBeliefSet ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.GeneratePLQueries ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.InterpretPLResults ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Composants pour TestPLAgent configur�s.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Ex�cution de la requ�te PL: 'c' sur le BeliefSet.
06:29:13 [ERROR] [agent.PropositionalLogicAgent.TestPLAgent] Erreur lors de l'ex�cution de la requ�te PL 'c': too many values to unpack (expected 2)
Traceback (most recent call last):
  File "D:\2025-Epita-Intelligence-Symbolique-4\argumentation_analysis\agents\core\logic\propositional_logic_agent.py", line 258, in execute_query
    is_entailed, raw_output_str = self._tweety_bridge.execute_pl_query( # Utilisez raw_output_str ici
ValueError: too many values to unpack (expected 2)
------------------------------ Captured log call ------------------------------
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:90 Configuration des composants pour TestPLAgent...
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:96 TweetyBridge initialis� pour TestPLAgent. JVM pr�te: True
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.TextToPLBeliefSet ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.GeneratePLQueries ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.InterpretPLResults ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:139 Composants pour TestPLAgent configur�s.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:248 Ex�cution de la requ�te PL: 'c' sur le BeliefSet.
ERROR    agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:281 Erreur lors de l'ex�cution de la requ�te PL 'c': too many values to unpack (expected 2)
Traceback (most recent call last):
  File "D:\2025-Epita-Intelligence-Symbolique-4\argumentation_analysis\agents\core\logic\propositional_logic_agent.py", line 258, in execute_query
    is_entailed, raw_output_str = self._tweety_bridge.execute_pl_query( # Utilisez raw_output_str ici
ValueError: too many values to unpack (expected 2)
-------------------------- Captured stdout teardown ---------------------------
2025-06-05 06:29:13,911 - tests.mocks.jpype_setup - INFO - jpype_setup.py: pytest_sessionfinish hook triggered. Exit status: 1
2025-06-05 06:29:13,911 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: sys.modules['jpype'] IS _REAL_JPYPE_MODULE. Le vrai JPype a potentiellement été utilisé.
2025-06-05 06:29:13,911 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: Tentative d'arrêt de la JVM via shutdown_jvm_if_needed() car le vrai JPype a potentiellement été utilisé.
2025-06-05 06:29:13,911 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: Vérification de l'état de la JVM après tentative d'arrêt.
2025-06-05 06:29:13,911 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: JVM encore démarrée après tentative d'arrêt: False
2025-06-05 06:29:13,911 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: destroy_jvm est False (selon config): False
2025-06-05 06:29:13,911 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: JVM non démarrée ou destroy_jvm est True. Pas de gestion spéciale de sys.modules pour atexit depuis ici.
python : 06:29:13 [INFO] [Orchestration.JPype] JVM_SETUP: Appel de shutdown_jvm_if_needed.
Au caractère Ligne:1 : 214
+ ... tputFile)"; python -m pytest tests/agents/core/logic/test_proposition ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (06:29:13 [INFO]..._jvm_if_needed.:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
 
06:29:13 [INFO] [Orchestration.JPype] JVM_SETUP: JVM n'était pas démarrée. Aucun arrêt nécessaire. isJVMStarted: False
06:29:13 [DEBUG] [tests.mocks.jpype_components.jvm] isJVMStarted() appelée. Retourne: False
2025-06-05 06:29:13,793 - tests.mocks.jpype_setup - INFO - �tat de JPype restaur� apr�s test test_execute_query_rejected (utilisation du mock).
__________ TestPropositionalLogicAgent.test_validate_formula_invalid __________

self = <MagicMock name='TweetyBridge().validate_formula' id='2345399596656'>
args = (), kwargs = {'formula_string': 'a => (b'}
expected = call(formula_string='a => (b'), actual = call('a => (b')
_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x000002227F2FED30>
cause = None

    def assert_called_with(self, /, *args, **kwargs):
        """assert that the last call was made with the specified arguments.
    
        Raises an AssertionError if the args and keyword args passed in are
        different to the last call to the mock."""
        if self.call_args is None:
            expected = self._format_mock_call_signature(args, kwargs)
            actual = 'not called.'
            error_message = ('expected call not found.\nExpected: %s\nActual: %s'
                    % (expected, actual))
            raise AssertionError(error_message)
    
        def _error_message():
            msg = self._format_mock_failure_message(args, kwargs)
            return msg
        expected = self._call_matcher(_Call((args, kwargs), two=True))
        actual = self._call_matcher(self.call_args)
        if actual != expected:
            cause = expected if isinstance(expected, Exception) else None
>           raise AssertionError(_error_message()) from cause
E           AssertionError: expected call not found.
E           Expected: validate_formula(formula_string='a => (b')
E           Actual: validate_formula('a => (b')

C:\Tools\miniconda3\lib\unittest\mock.py:907: AssertionError

During handling of the above exception, another exception occurred:

self = <MagicMock name='TweetyBridge().validate_formula' id='2345399596656'>
args = (), kwargs = {'formula_string': 'a => (b'}

    def assert_called_once_with(self, /, *args, **kwargs):
        """assert that the mock was called exactly once and that that call was
        with the specified arguments."""
        if not self.call_count == 1:
            msg = ("Expected '%s' to be called once. Called %s times.%s"
                   % (self._mock_name or 'mock',
                      self.call_count,
                      self._calls_repr()))
            raise AssertionError(msg)
>       return self.assert_called_with(*args, **kwargs)
E       AssertionError: expected call not found.
E       Expected: validate_formula(formula_string='a => (b')
E       Actual: validate_formula('a => (b')
E       
E       pytest introspection follows:
E       
E       Args:
E       assert ('a => (b',) == ()
E         
E         Left contains one more item: 'a => (b'
E         Use -v to get more diff
E       Kwargs:
E       assert {} == {'formula_string': 'a => (b'}
E         
E         Right contains 1 more item:
E         {'formula_string': 'a => (b'}
E         Use -v to get more diff

C:\Tools\miniconda3\lib\unittest\mock.py:919: AssertionError

During handling of the above exception, another exception occurred:

self = <test_propositional_logic_agent.TestPropositionalLogicAgent testMethod=test_validate_formula_invalid>

    def test_validate_formula_invalid(self):
        """Test de la validation d'une formule invalide."""
        if not os.environ.get('USE_REAL_JPYPE', 'false').lower() in ('true', '1'):
            self.mock_tweety_bridge_instance.validate_formula.return_value = (False, "Erreur de syntaxe")
            is_valid, _ = self.agent.tweety_bridge.validate_formula("a => (b") # Appel mock�
>           self.mock_tweety_bridge_instance.validate_formula.assert_called_once_with(formula_string="a => (b")
E           AssertionError: expected call not found.
E           Expected: validate_formula(formula_string='a => (b')
E           Actual: validate_formula('a => (b')
E           
E           pytest introspection follows:
E           
E           Args:
E           assert ('a => (b',) == ()
E             
E             Left contains one more item: 'a => (b'
E             Use -v to get more diff
E           Kwargs:
E           assert {} == {'formula_string': 'a => (b'}
E             
E             Right contains 1 more item:
E             {'formula_string': 'a => (b'}
E             Use -v to get more diff

tests\agents\core\logic\test_propositional_logic_agent.py:293: AssertionError
---------------------------- Captured stdout setup ----------------------------
2025-06-05 06:29:13,868 - tests.mocks.jpype_setup - INFO - Test test_validate_formula_invalid utilise MOCK JPype.
2025-06-05 06:29:13,868 - tests.mocks.jpype_setup - INFO - �tat (_jvm_started, _jvm_path, config.jvm_path) du mock JPype r�initialis� pour le test.
---------------------------- Captured stderr call -----------------------------
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Configuration des composants pour TestPLAgent...
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] TweetyBridge initialis� pour TestPLAgent. JVM pr�te: True
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.TextToPLBeliefSet ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.GeneratePLQueries ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Fonction s�mantique TestPLAgent.InterpretPLResults ajout�e.
06:29:13 [INFO] [agent.PropositionalLogicAgent.TestPLAgent] Composants pour TestPLAgent configur�s.
------------------------------ Captured log call ------------------------------
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:90 Configuration des composants pour TestPLAgent...
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:96 TweetyBridge initialis� pour TestPLAgent. JVM pr�te: True
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.TextToPLBeliefSet ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.GeneratePLQueries ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:135 Fonction s�mantique TestPLAgent.InterpretPLResults ajout�e.
INFO     agent.PropositionalLogicAgent.TestPLAgent:propositional_logic_agent.py:139 Composants pour TestPLAgent configur�s.
-------------------------- Captured stdout teardown ---------------------------
2025-06-05 06:29:13,904 - tests.mocks.jpype_setup - INFO - �tat de JPype restaur� apr�s test test_validate_formula_invalid (utilisation du mock).
============================== warnings summary ===============================
C:\Users\MYIA\AppData\Roaming\Python\Python39\site-packages\pydantic\_internal\_config.py:291
  C:\Users\MYIA\AppData\Roaming\Python\Python39\site-packages\pydantic\_internal\_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

C:\Users\MYIA\AppData\Roaming\Python\Python39\site-packages\pydantic\_internal\_config.py:341
  C:\Users\MYIA\AppData\Roaming\Python\Python39\site-packages\pydantic\_internal\_config.py:341: UserWarning: Valid config keys have changed in V2:
  * 'allow_population_by_field_name' has been renamed to 'populate_by_name'
    warnings.warn(message, UserWarning)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
FAILED tests/agents/core/logic/test_propositional_logic_agent.py::TestPropositionalLogicAgent::test_execute_query_accepted
FAILED tests/agents/core/logic/test_propositional_logic_agent.py::TestPropositionalLogicAgent::test_execute_query_error_tweety
FAILED tests/agents/core/logic/test_propositional_logic_agent.py::TestPropositionalLogicAgent::test_execute_query_rejected
FAILED tests/agents/core/logic/test_propositional_logic_agent.py::TestPropositionalLogicAgent::test_validate_formula_invalid
=================== 4 failed, 9 passed, 2 warnings in 2.32s ===================
