name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-format:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        timeout-minutes: 15  # Protection contre timeouts
        with:
          python-version: "3.10"  # FIX: guillemets pour éviter 3.1
          environment-file: environment.yml
          activate-environment: projet-is
          use-mamba: true  # Résolution 5-10x plus rapide
          auto-update-conda: false  # Évite instabilités cache

      - name: Check code formatting
        shell: pwsh
        run: |
          scripts/setup/activate_project_env.ps1 -CommandToRun "black --check --diff ."
      
      - name: Check code linting
        shell: pwsh
        run: |
          scripts/setup/activate_project_env.ps1 -CommandToRun "flake8 ."

  automated-tests:
    runs-on: windows-latest
    needs: lint-and-format
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        timeout-minutes: 15  # Protection contre timeouts
        with:
          python-version: "3.10"  # FIX: guillemets pour éviter 3.1
          environment-file: environment.yml
          activate-environment: projet-is
          use-mamba: true  # Résolution 5-10x plus rapide
          auto-update-conda: false  # Évite instabilités cache

      - name: Check API keys availability
        id: check_secrets
        shell: pwsh
        run: |
          if ("${{ secrets.OPENAI_API_KEY }}" -ne "") {
            echo "API_KEYS_CONFIGURED=true" >> $env:GITHUB_ENV
            Write-Host "✅ API keys are configured"
          } else {
            echo "API_KEYS_CONFIGURED=false" >> $env:GITHUB_ENV
            Write-Host "⚠️ OPENAI_API_KEY not configured - tests will be skipped"
          }

      - name: Run automated tests
        if: env.API_KEYS_CONFIGURED == 'true'
        shell: pwsh
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TEXT_CONFIG_PASSPHRASE: ${{ secrets.TEXT_CONFIG_PASSPHRASE }}
        run: |
          scripts/setup/activate_project_env.ps1 -CommandToRun "pytest tests/ --junitxml=pytest_report.xml -v"

      - name: Generate test summary
        if: always()
        shell: pwsh
        run: |
          scripts/setup/activate_project_env.ps1 -CommandToRun @"
          Write-Host ""
          Write-Host "═══════════════════════════════════════════════"
          Write-Host "📊 TEST EXECUTION SUMMARY"
          Write-Host "═══════════════════════════════════════════════"
          
          if (Test-Path pytest_report.xml) {
            [xml]`$xml = Get-Content pytest_report.xml
            `$total = [int]`$xml.testsuites.tests
            `$errors = [int]`$xml.testsuites.errors
            `$failures = [int]`$xml.testsuites.failures
            `$skipped = [int]`$xml.testsuites.skipped
            `$passed = `$total - `$errors - `$failures - `$skipped
            
            Write-Host "✅ Passed:  `$passed / `$total"
            Write-Host "❌ Failed:  `$(`$errors + `$failures) / `$total"
            Write-Host "⏭️  Skipped: `$skipped / `$total"
            
            if (`$skipped -gt 0) {
              Write-Host ""
              Write-Host "ℹ️  Note: `$skipped tests were skipped (likely due to missing API keys)"
              Write-Host "   These tests require OPENAI_API_KEY or other API credentials."
              Write-Host "   Configure secrets in GitHub repository settings to run them."
            }
          } else {
            Write-Host "⚠️  No test report generated (tests may have been skipped)"
            Write-Host ""
            Write-Host "ℹ️  API keys not configured - all tests requiring APIs were skipped"
            Write-Host "   This is expected behavior for forks and external contributions"
          }
          Write-Host "═══════════════════════════════════════════════"
          "@

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: |
            pytest_report.xml
            **/*.log
          if-no-files-found: warn

      - name: Notify tests skipped
        if: env.API_KEYS_CONFIGURED != 'true'
        shell: pwsh
        run: |
          Write-Host "ℹ️ Automated tests skipped: API keys not configured"
          Write-Host "This is expected behavior for forks and external contributions"
          Write-Host "Tests requiring API access are marked with @pytest.mark.requires_api"