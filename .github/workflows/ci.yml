name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-format:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.10
          environment-file: environment.yml
          activate-environment: epita-symbolic-ai

      - name: Format with black
        shell: pwsh
        run: scripts/setup/activate_project_env.ps1 -CommandToRun "black ."

      - name: Check formatting and linting
        shell: pwsh
        run: |
          scripts/setup/activate_project_env.ps1 -CommandToRun "black --check ."
          scripts/setup/activate_project_env.ps1 -CommandToRun "flake8 ."

  automated-tests:
    runs-on: windows-latest
    needs: lint-and-format
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.10
          environment-file: environment.yml
          activate-environment: epita-symbolic-ai

      - name: Check API keys availability
        id: check_secrets
        shell: pwsh
        run: |
          if ("${{ secrets.OPENAI_API_KEY }}" -ne "") {
            echo "API_KEYS_CONFIGURED=true" >> $env:GITHUB_ENV
            Write-Host "✅ API keys are configured"
          } else {
            echo "API_KEYS_CONFIGURED=false" >> $env:GITHUB_ENV
            Write-Host "⚠️ OPENAI_API_KEY not configured - tests will be skipped"
          }

      - name: Run automated tests
        if: env.API_KEYS_CONFIGURED == 'true'
        shell: pwsh
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TEXT_CONFIG_PASSPHRASE: ${{ secrets.TEXT_CONFIG_PASSPHRASE }}
        run: |
          scripts/setup/activate_project_env.ps1 -CommandToRun "pytest"

      - name: Notify tests skipped
        if: env.API_KEYS_CONFIGURED != 'true'
        shell: pwsh
        run: |
          Write-Host "ℹ️ Automated tests skipped: API keys not configured"
          Write-Host "This is expected behavior for forks and external contributions"
          Write-Host "Tests requiring API access are marked with @pytest.mark.requires_api"