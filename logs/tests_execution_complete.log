============================= test session starts =============================
platform win32 -- Python 3.10.18, pytest-8.4.0, pluggy-1.6.0 -- C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\python.exe
cachedir: .pytest_cache
rootdir: D:\2025-Epita-Intelligence-Symbolique
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, mock-3.14.1
asyncio: mode=strict, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
pytest : --- Logging error ---
Au caractère Ligne:1 : 316
+ ... YPE=false'; pytest tests/ -v --tb=short --maxfail=20 --durations=10 2 ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (--- Logging error ---:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
 
Traceback (most recent call last):
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\logging\__init__.py", line 1103, in emit
    stream.write(msg + self.terminator)
ValueError: I/O operation on closed file.
Call stack:
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\Scripts\pytest.exe\__main__.py", line 7, in <module>
    sys.exit(console_main())
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 201, 
in console_main
    code = main()
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 175, 
in main
    ret: ExitCode | int = config.hook.pytest_cmdline_main(config=config)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 336, in 
pytest_cmdline_main
    return wrap_session(config, _main)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 324, in 
wrap_session
    config.hook.pytest_sessionfinish(
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "D:\2025-Epita-Intelligence-Symbolique\tests\mocks\jpype_setup.py", line 296, in pytest_sessionfinish
    logger.info(f"jpype_setup.py: pytest_sessionfinish hook triggered. Exit status: {exitstatus}")
Message: 'jpype_setup.py: pytest_sessionfinish hook triggered. Exit status: 2'
Arguments: ()
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\logging\__init__.py", line 1103, in emit
    stream.write(msg + self.terminator)
ValueError: I/O operation on closed file.
Call stack:
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\Scripts\pytest.exe\__main__.py", line 7, in <module>
    sys.exit(console_main())
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 201, 
in console_main
    code = main()
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 175, 
in main
    ret: ExitCode | int = config.hook.pytest_cmdline_main(config=config)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 336, in 
pytest_cmdline_main
    return wrap_session(config, _main)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 324, in 
wrap_session
    config.hook.pytest_sessionfinish(
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "D:\2025-Epita-Intelligence-Symbolique\tests\mocks\jpype_setup.py", line 302, in pytest_sessionfinish
    logger.info("   pytest_sessionfinish: sys.modules['jpype'] IS _REAL_JPYPE_MODULE. Le vrai JPype a potentiellement 
�t� utilis�.")
Message: "   pytest_sessionfinish: sys.modules['jpype'] IS _REAL_JPYPE_MODULE. Le vrai JPype a potentiellement �t� 
utilis�."
Arguments: ()
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\logging\__init__.py", line 1103, in emit
    stream.write(msg + self.terminator)
ValueError: I/O operation on closed file.
Call stack:
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\Scripts\pytest.exe\__main__.py", line 7, in <module>
    sys.exit(console_main())
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 201, 
in console_main
    code = main()
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 175, 
in main
    ret: ExitCode | int = config.hook.pytest_cmdline_main(config=config)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 336, in 
pytest_cmdline_main
    return wrap_session(config, _main)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 324, in 
wrap_session
    config.hook.pytest_sessionfinish(
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "D:\2025-Epita-Intelligence-Symbolique\tests\mocks\jpype_setup.py", line 311, in pytest_sessionfinish
    logger.info("   pytest_sessionfinish: Tentative d'arr�t de la JVM via shutdown_jvm_if_needed() car le vrai JPype a 
potentiellement �t� utilis�.")
Message: "   pytest_sessionfinish: Tentative d'arr�t de la JVM via shutdown_jvm_if_needed() car le vrai JPype a 
potentiellement �t� utilis�."
Arguments: ()
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\logging\__init__.py", line 1103, in emit
    stream.write(msg + self.terminator)
ValueError: I/O operation on closed file.
Call stack:
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\Scripts\pytest.exe\__main__.py", line 7, in <module>
    sys.exit(console_main())
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 201, 
in console_main
    code = main()
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 175, 
in main
    ret: ExitCode | int = config.hook.pytest_cmdline_main(config=config)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 336, in 
pytest_cmdline_main
    return wrap_session(config, _main)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 324, in 
wrap_session
    config.hook.pytest_sessionfinish(
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "D:\2025-Epita-Intelligence-Symbolique\tests\mocks\jpype_setup.py", line 319, in pytest_sessionfinish
    shutdown_jvm_if_needed() # Appel de notre fonction centralis�e
  File "D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\core\jvm_setup.py", line 247, in 
shutdown_jvm_if_needed
    _safe_log(logger, logging.INFO, "JVM_SETUP: Appel de shutdown_jvm_if_needed.")
  File "D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\core\jvm_setup.py", line 214, in _safe_log
    logger_instance.info(message)
Message: 'JVM_SETUP: Appel de shutdown_jvm_if_needed.'
Arguments: ()
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\logging\__init__.py", line 1103, in emit
    stream.write(msg + self.terminator)
ValueError: I/O operation on closed file.
Call stack:
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\Scripts\pytest.exe\__main__.py", line 7, in <module>
    sys.exit(console_main())
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 201, 
in console_main
    code = main()
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 175, 
in main
    ret: ExitCode | int = config.hook.pytest_cmdline_main(config=config)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 336, in 
pytest_cmdline_main
    return wrap_session(config, _main)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 324, in 
wrap_session
    config.hook.pytest_sessionfinish(
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "D:\2025-Epita-Intelligence-Symbolique\tests\mocks\jpype_setup.py", line 319, in pytest_sessionfinish
    shutdown_jvm_if_needed() # Appel de notre fonction centralis�e
  File "D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\core\jvm_setup.py", line 254, in 
shutdown_jvm_if_needed
    _safe_log(logger, logging.INFO, f"JVM_SETUP: JVM n'�tait pas d�marr�e. Aucun arr�t n�cessaire. isJVMStarted: 
{jpype.isJVMStarted()}")
  File "D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\core\jvm_setup.py", line 214, in _safe_log
    logger_instance.info(message)
Message: "JVM_SETUP: JVM n'�tait pas d�marr�e. Aucun arr�t n�cessaire. isJVMStarted: False"
Arguments: ()
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\logging\__init__.py", line 1103, in emit
    stream.write(msg + self.terminator)
ValueError: I/O operation on closed file.
Call stack:
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\Scripts\pytest.exe\__main__.py", line 7, in <module>
    sys.exit(console_main())
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 201, 
in console_main
    code = main()
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 175, 
in main
    ret: ExitCode | int = config.hook.pytest_cmdline_main(config=config)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 336, in 
pytest_cmdline_main
    return wrap_session(config, _main)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 324, in 
wrap_session
    config.hook.pytest_sessionfinish(
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "D:\2025-Epita-Intelligence-Symbolique\tests\mocks\jpype_setup.py", line 335, in pytest_sessionfinish
    logger.info("   pytest_sessionfinish: V�rification de l'�tat de la JVM apr�s tentative d'arr�t.")
Message: "   pytest_sessionfinish: V�rification de l'�tat de la JVM apr�s tentative d'arr�t."
Arguments: ()
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\logging\__init__.py", line 1103, in emit
    stream.write(msg + self.terminator)
ValueError: I/O operation on closed file.
Call stack:
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\Scripts\pytest.exe\__main__.py", line 7, in <module>
    sys.exit(console_main())
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 201, 
in console_main
    code = main()
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 175, 
in main
    ret: ExitCode | int = config.hook.pytest_cmdline_main(config=config)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 336, in 
pytest_cmdline_main
    return wrap_session(config, _main)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 324, in 
wrap_session
    config.hook.pytest_sessionfinish(
collecting ... collected 1668 items / 17 errors

=================================== ERRORS ====================================
_ ERROR collecting tests/agents/tools/analysis/enhanced/test_enhanced_contextual_fallacy_analyzer.py _
tests\agents\tools\analysis\enhanced\test_enhanced_contextual_fallacy_analyzer.py:29: in <module>
    import torch
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\torch\__init__.py:270: in <module>
    _load_dll_libraries()
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\torch\__init__.py:266: in _load_dll_libraries
    raise err
E   OSError: [WinError 126] Le module sp�cifi� est introuvable. Error loading "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\torch\lib\torch_python.dll" or one of its dependencies.
____________ ERROR collecting tests/config/test_config_real_gpt.py ____________
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\config\test_config_real_gpt.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\config\test_config_real_gpt.py:18: in <module>
    from semantic_kernel.services.openai import OpenAIChatCompletion
E   ModuleNotFoundError: No module named 'semantic_kernel.services.openai'
___ ERROR collecting tests/functional/test_agent_collaboration_workflow.py ____
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\functional\test_agent_collaboration_workflow.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\functional\test_agent_collaboration_workflow.py:44: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.manager import OperationalManager
argumentation_analysis\orchestration\hierarchical\operational\__init__.py:10: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.agent_registry import OperationalAgentRegistry
argumentation_analysis\orchestration\hierarchical\operational\agent_registry.py:18: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.adapters.rhetorical_tools_adapter import RhetoricalToolsAdapter
argumentation_analysis\orchestration\hierarchical\operational\adapters\rhetorical_tools_adapter.py:29: in <module>
    from argumentation_analysis.agents.tools.analysis.new.argument_structure_visualizer import ArgumentStructureVisualizer
argumentation_analysis\agents\tools\analysis\new\__init__.py:12: in <module>
    from .argument_structure_visualizer import ArgumentStructureVisualizer
argumentation_analysis\agents\tools\analysis\new\argument_structure_visualizer.py:17: in <module>
    import matplotlib.pyplot as plt
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\__init__.py:159: in <module>
    from . import _api, _version, cbook, _docstring, rcsetup
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\cbook.py:32: in <module>
    from matplotlib import _api, _c_internal_utils
E   ImportError: cannot import name '_c_internal_utils' from partially initialized module 'matplotlib' (most likely due to a circular import) (C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\__init__.py)
------------------------------- Captured stdout -------------------------------
06:33:45 [INFO] [App.UI.CacheUtils] Utilitaires de cache UI d�finis.
06:33:45 [INFO] [App.UI.FetchUtils] Utilitaires de fetch UI d�finis.
06:33:45 [INFO] [App.UI.VerificationUtils] Utilitaires de v�rification UI d�finis.
06:33:45 [INFO] [App.UI.Utils] Module principal des utilitaires UI (utils.py) initialis� et sous-modules import�s.
06:33:45 [INFO] [Services.CacheService] R�pertoire de cache initialis�: D:\2025-Epita-Intelligence-Symbolique\_temp\text_cache
06:33:45 [INFO] [Services.FetchService] FetchService initialis� avec Tika URL: https://tika.open-webui.myia.io/tika, timeout: 30s
06:33:45 [WARNING] [Services.CryptoService] Service de chiffrement initialis� sans cl�. Le chiffrement est d�sactiv�.
06:33:45 [WARNING] [argumentation_analysis.orchestration.hierarchical] Erreur d'import dans le module hi�rarchique: cannot import name '_c_internal_utils' from partially initialized module 'matplotlib' (most likely due to a circular import) (C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\__init__.py)
_________ ERROR collecting tests/functional/test_argument_analyzer.py _________
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\functional\test_argument_analyzer.py'.
Hint: make sure your test modules/packages have valid Python names.
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "D:\2025-Epita-Intelligence-Symbolique\tests\mocks\jpype_setup.py", line 350, in pytest_sessionfinish
    logger.info(f"   pytest_sessionfinish: JVM encore d�marr�e apr�s tentative d'arr�t: 
{jvm_still_started_after_shutdown_attempt}")
Message: "   pytest_sessionfinish: JVM encore d�marr�e apr�s tentative d'arr�t: False"
Arguments: ()
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\logging\__init__.py", line 1103, in emit
    stream.write(msg + self.terminator)
ValueError: I/O operation on closed file.
Call stack:
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\Scripts\pytest.exe\__main__.py", line 7, in <module>
    sys.exit(console_main())
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 201, 
in console_main
    code = main()
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 175, 
in main
    ret: ExitCode | int = config.hook.pytest_cmdline_main(config=config)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 336, in 
pytest_cmdline_main
    return wrap_session(config, _main)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 324, in 
wrap_session
    config.hook.pytest_sessionfinish(
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "D:\2025-Epita-Intelligence-Symbolique\tests\mocks\jpype_setup.py", line 355, in pytest_sessionfinish
    logger.info(f"   pytest_sessionfinish: destroy_jvm est False (selon config): {destroy_jvm_is_false}")
Message: '   pytest_sessionfinish: destroy_jvm est False (selon config): False'
Arguments: ()
--- Logging error ---
Traceback (most recent call last):
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\logging\__init__.py", line 1103, in emit
    stream.write(msg + self.terminator)
ValueError: I/O operation on closed file.
Call stack:
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\Scripts\pytest.exe\__main__.py", line 7, in <module>
    sys.exit(console_main())
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 201, 
in console_main
    code = main()
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\functional\test_argument_analyzer.py:2: in <module>
    from playwright.sync_api import Page, expect
E   ModuleNotFoundError: No module named 'playwright'
______ ERROR collecting tests/functional/test_argument_reconstructor.py _______
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\functional\test_argument_reconstructor.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\functional\test_argument_reconstructor.py:2: in <module>
    from playwright.sync_api import Page, expect
E   ModuleNotFoundError: No module named 'playwright'
_________ ERROR collecting tests/functional/test_fallacy_detector.py __________
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\functional\test_fallacy_detector.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\functional\test_fallacy_detector.py:3: in <module>
    from playwright.sync_api import Page, expect
E   ModuleNotFoundError: No module named 'playwright'
____________ ERROR collecting tests/functional/test_logic_graph.py ____________
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\functional\test_logic_graph.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\functional\test_logic_graph.py:3: in <module>
    from playwright.sync_api import Page, expect
E   ModuleNotFoundError: No module named 'playwright'
__________ ERROR collecting tests/functional/test_webapp_homepage.py __________
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\functional\test_webapp_homepage.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\functional\test_webapp_homepage.py:3: in <module>
    from playwright.sync_api import Page, expect
E   ModuleNotFoundError: No module named 'playwright'
_ ERROR collecting tests/integration/test_sherlock_watson_moriarty_real_gpt.py _
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_sherlock_watson_moriarty_real_gpt.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\integration\test_sherlock_watson_moriarty_real_gpt.py:20: in <module>
    from semantic_kernel.services.openai import OpenAIChatCompletion
E   ModuleNotFoundError: No module named 'semantic_kernel.services.openai'
________ ERROR collecting tests/performance/test_oracle_performance.py ________
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\performance\test_oracle_performance.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\performance\test_oracle_performance.py:24: in <module>
    from semantic_kernel.services.openai import OpenAIChatCompletion
E   ModuleNotFoundError: No module named 'semantic_kernel.services.openai'
__________ ERROR collecting tests/robustness/test_error_handling.py ___________
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\robustness\test_error_handling.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\robustness\test_error_handling.py:24: in <module>
    from semantic_kernel.services.openai import OpenAIChatCompletion
E   ModuleNotFoundError: No module named 'semantic_kernel.services.openai'
_ ERROR collecting tests/unit/argumentation_analysis/nlp/test_embedding_utils.py _
tests\unit\argumentation_analysis\nlp\test_embedding_utils.py:22: in <module>
    from argumentation_analysis.nlp.embedding_utils import get_embeddings_for_chunks, save_embeddings_data
argumentation_analysis\nlp\embedding_utils.py:36: in <module>
    from sentence_transformers import SentenceTransformer
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\sentence_transformers\__init__.py:3: in <module>
    from .datasets import SentencesDataset, ParallelSentencesDataset
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\sentence_transformers\datasets\__init__.py:1: in <module>
    from .DenoisingAutoEncoderDataset import DenoisingAutoEncoderDataset
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\sentence_transformers\datasets\DenoisingAutoEncoderDataset.py:1: in <module>
    from torch.utils.data import Dataset
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\config\__init__.py", line 175, 
in main
    ret: ExitCode | int = config.hook.pytest_cmdline_main(config=config)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 336, in 
pytest_cmdline_main
    return wrap_session(config, _main)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\_pytest\main.py", line 324, in 
wrap_session
    config.hook.pytest_sessionfinish(
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_hooks.py", line 512, in __call__
    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_manager.py", line 120, in 
_hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pluggy\_callers.py", line 121, in 
_multicall
    res = hook_impl.function(*args)
  File "D:\2025-Epita-Intelligence-Symbolique\tests\mocks\jpype_setup.py", line 372, in pytest_sessionfinish
    logger.info("   pytest_sessionfinish: JVM non d�marr�e ou destroy_jvm est True. Pas de gestion sp�ciale de 
sys.modules pour atexit depuis ici.")
Message: '   pytest_sessionfinish: JVM non d�marr�e ou destroy_jvm est True. Pas de gestion sp�ciale de sys.modules 
pour atexit depuis ici.'
Arguments: ()
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\torch\__init__.py:270: in <module>
    _load_dll_libraries()
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\torch\__init__.py:266: in _load_dll_libraries
    raise err
E   OSError: [WinError 126] Le module sp�cifi� est introuvable. Error loading "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\torch\lib\torch_python.dll" or one of its dependencies.
------------------------------- Captured stdout -------------------------------
06:33:46 [INFO] [argumentation_analysis.nlp] Package 'argumentation_analysis.nlp' charg�.
_ ERROR collecting tests/unit/argumentation_analysis/pipelines/test_embedding_pipeline.py _
tests\unit\argumentation_analysis\pipelines\test_embedding_pipeline.py:7: in <module>
    from argumentation_analysis.pipelines.embedding_pipeline import run_embedding_generation_pipeline, PROJECT_ROOT
argumentation_analysis\pipelines\embedding_pipeline.py:45: in <module>
    from argumentation_analysis.nlp.embedding_utils import get_embeddings_for_chunks, save_embeddings_data
argumentation_analysis\nlp\embedding_utils.py:36: in <module>
    from sentence_transformers import SentenceTransformer
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\sentence_transformers\__init__.py:3: in <module>
    from .datasets import SentencesDataset, ParallelSentencesDataset
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\sentence_transformers\datasets\__init__.py:1: in <module>
    from .DenoisingAutoEncoderDataset import DenoisingAutoEncoderDataset
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\sentence_transformers\datasets\DenoisingAutoEncoderDataset.py:1: in <module>
    from torch.utils.data import Dataset
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\torch\__init__.py:270: in <module>
    _load_dll_libraries()
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\torch\__init__.py:266: in _load_dll_libraries
    raise err
E   OSError: [WinError 126] Le module sp�cifi� est introuvable. Error loading "C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\torch\lib\torch_python.dll" or one of its dependencies.
_ ERROR collecting tests/unit/argumentation_analysis/pipelines/test_reporting_pipeline.py _
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\pipelines\test_reporting_pipeline.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\unit\argumentation_analysis\pipelines\test_reporting_pipeline.py:11: in <module>
    from argumentation_analysis.pipelines.reporting_pipeline import run_comprehensive_report_pipeline
argumentation_analysis\pipelines\reporting_pipeline.py:20: in <module>
    import matplotlib.pyplot as plt
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\__init__.py:159: in <module>
    from . import _api, _version, cbook, _docstring, rcsetup
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\cbook.py:32: in <module>
    from matplotlib import _api, _c_internal_utils
E   ImportError: cannot import name '_c_internal_utils' from partially initialized module 'matplotlib' (most likely due to a circular import) (C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\__init__.py)
_ ERROR collecting tests/unit/argumentation_analysis/test_hierarchical_integration.py _
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\test_hierarchical_integration.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\unit\argumentation_analysis\test_hierarchical_integration.py:24: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.manager import OperationalManager
argumentation_analysis\orchestration\hierarchical\operational\__init__.py:10: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.agent_registry import OperationalAgentRegistry
argumentation_analysis\orchestration\hierarchical\operational\agent_registry.py:18: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.adapters.rhetorical_tools_adapter import RhetoricalToolsAdapter
argumentation_analysis\orchestration\hierarchical\operational\adapters\rhetorical_tools_adapter.py:29: in <module>
    from argumentation_analysis.agents.tools.analysis.new.argument_structure_visualizer import ArgumentStructureVisualizer
argumentation_analysis\agents\tools\analysis\new\__init__.py:12: in <module>
    from .argument_structure_visualizer import ArgumentStructureVisualizer
argumentation_analysis\agents\tools\analysis\new\argument_structure_visualizer.py:17: in <module>
    import matplotlib.pyplot as plt
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\__init__.py:159: in <module>
    from . import _api, _version, cbook, _docstring, rcsetup
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\cbook.py:32: in <module>
    from matplotlib import _api, _c_internal_utils
E   ImportError: cannot import name '_c_internal_utils' from partially initialized module 'matplotlib' (most likely due to a circular import) (C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\__init__.py)
_ ERROR collecting tests/unit/argumentation_analysis/test_hierarchical_performance.py _
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\test_hierarchical_performance.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\unit\argumentation_analysis\test_hierarchical_performance.py:33: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.manager import OperationalManager
argumentation_analysis\orchestration\hierarchical\operational\__init__.py:10: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.agent_registry import OperationalAgentRegistry
argumentation_analysis\orchestration\hierarchical\operational\agent_registry.py:18: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.adapters.rhetorical_tools_adapter import RhetoricalToolsAdapter
argumentation_analysis\orchestration\hierarchical\operational\adapters\rhetorical_tools_adapter.py:29: in <module>
    from argumentation_analysis.agents.tools.analysis.new.argument_structure_visualizer import ArgumentStructureVisualizer
argumentation_analysis\agents\tools\analysis\new\__init__.py:12: in <module>
    from .argument_structure_visualizer import ArgumentStructureVisualizer
argumentation_analysis\agents\tools\analysis\new\argument_structure_visualizer.py:17: in <module>
    import matplotlib.pyplot as plt
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\__init__.py:159: in <module>
    from . import _api, _version, cbook, _docstring, rcsetup
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\cbook.py:32: in <module>
    from matplotlib import _api, _c_internal_utils
E   ImportError: cannot import name '_c_internal_utils' from partially initialized module 'matplotlib' (most likely due to a circular import) (C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\__init__.py)
_ ERROR collecting tests/unit/argumentation_analysis/test_operational_agents_integration.py _
ImportError while importing test module 'D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\test_operational_agents_integration.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\importlib\__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests\unit\argumentation_analysis\test_operational_agents_integration.py:28: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.agent_registry import OperationalAgentRegistry
argumentation_analysis\orchestration\hierarchical\operational\__init__.py:10: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.agent_registry import OperationalAgentRegistry
argumentation_analysis\orchestration\hierarchical\operational\agent_registry.py:18: in <module>
    from argumentation_analysis.orchestration.hierarchical.operational.adapters.rhetorical_tools_adapter import RhetoricalToolsAdapter
argumentation_analysis\orchestration\hierarchical\operational\adapters\rhetorical_tools_adapter.py:29: in <module>
    from argumentation_analysis.agents.tools.analysis.new.argument_structure_visualizer import ArgumentStructureVisualizer
argumentation_analysis\agents\tools\analysis\new\__init__.py:12: in <module>
    from .argument_structure_visualizer import ArgumentStructureVisualizer
argumentation_analysis\agents\tools\analysis\new\argument_structure_visualizer.py:17: in <module>
    import matplotlib.pyplot as plt
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\__init__.py:159: in <module>
    from . import _api, _version, cbook, _docstring, rcsetup
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\cbook.py:32: in <module>
    from matplotlib import _api, _c_internal_utils
E   ImportError: cannot import name '_c_internal_utils' from partially initialized module 'matplotlib' (most likely due to a circular import) (C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\matplotlib\__init__.py)
============================== warnings summary ===============================
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pydantic\_internal\_config.py:291
  C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pydantic\_internal\_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pydantic\_internal\_config.py:341
  C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pydantic\_internal\_config.py:341: UserWarning: Valid config keys have changed in V2:
  * 'allow_population_by_field_name' has been renamed to 'populate_by_name'
    warnings.warn(message, UserWarning)

tests\comparison\test_mock_vs_real_behavior.py:465
  D:\2025-Epita-Intelligence-Symbolique\tests\comparison\test_mock_vs_real_behavior.py:465: PytestUnknownMarkWarning: Unknown pytest.mark.comparison - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.comparison

tests\comparison\test_mock_vs_real_behavior.py:621
  D:\2025-Epita-Intelligence-Symbolique\tests\comparison\test_mock_vs_real_behavior.py:621: PytestUnknownMarkWarning: Unknown pytest.mark.comparison - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.comparison

tests\integration\jpype_tweety\test_advanced_reasoning.py:21
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\jpype_tweety\test_advanced_reasoning.py:21: PytestUnknownMarkWarning: Unknown pytest.mark.real_jpype - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_jpype

tests\integration\jpype_tweety\test_agent_integration.py:5
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\jpype_tweety\test_agent_integration.py:5: PytestUnknownMarkWarning: Unknown pytest.mark.real_jpype - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_jpype

tests\integration\jpype_tweety\test_argumentation_frameworks.py:5
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\jpype_tweety\test_argumentation_frameworks.py:5: PytestUnknownMarkWarning: Unknown pytest.mark.real_jpype - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_jpype

tests\integration\jpype_tweety\test_belief_revision.py:5
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\jpype_tweety\test_belief_revision.py:5: PytestUnknownMarkWarning: Unknown pytest.mark.real_jpype - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_jpype

tests\integration\jpype_tweety\test_jvm_stability.py:6
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\jpype_tweety\test_jvm_stability.py:6: PytestUnknownMarkWarning: Unknown pytest.mark.real_jpype - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_jpype

tests\integration\jpype_tweety\test_theory_operations.py:8
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\jpype_tweety\test_theory_operations.py:8: PytestUnknownMarkWarning: Unknown pytest.mark.real_jpype - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_jpype

tests\integration\test_cluedo_extended_workflow.py:38
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_cluedo_extended_workflow.py:38: PytestUnknownMarkWarning: Unknown pytest.mark.comparison - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.comparison

tests\integration\test_cluedo_extended_workflow.py:373
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_cluedo_extended_workflow.py:373: PytestUnknownMarkWarning: Unknown pytest.mark.comparison - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.comparison

tests\integration\test_cluedo_extended_workflow.py:374
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_cluedo_extended_workflow.py:374: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.performance

tests\integration\test_cluedo_extended_workflow.py:525
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_cluedo_extended_workflow.py:525: PytestUnknownMarkWarning: Unknown pytest.mark.comparison - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.comparison

tests\integration\test_cluedo_extended_workflow.py:526
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_cluedo_extended_workflow.py:526: PytestUnknownMarkWarning: Unknown pytest.mark.user_experience - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.user_experience

tests\integration\test_cluedo_oracle_enhanced_real.py:90
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_cluedo_oracle_enhanced_real.py:90: PytestUnknownMarkWarning: Unknown pytest.mark.real_gpt - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_gpt

tests\integration\test_cluedo_oracle_enhanced_real.py:346
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_cluedo_oracle_enhanced_real.py:346: PytestUnknownMarkWarning: Unknown pytest.mark.real_gpt - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_gpt

tests\integration\test_cluedo_oracle_enhanced_real.py:445
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_cluedo_oracle_enhanced_real.py:445: PytestUnknownMarkWarning: Unknown pytest.mark.real_gpt - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_gpt

tests\integration\test_cluedo_oracle_enhanced_real.py:446
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_cluedo_oracle_enhanced_real.py:446: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.performance

tests\integration\test_einstein_demo_real.py:115
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_einstein_demo_real.py:115: PytestUnknownMarkWarning: Unknown pytest.mark.real_gpt - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_gpt

tests\integration\test_einstein_demo_real.py:356
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_einstein_demo_real.py:356: PytestUnknownMarkWarning: Unknown pytest.mark.real_gpt - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_gpt

tests\integration\test_einstein_demo_real.py:454
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_einstein_demo_real.py:454: PytestUnknownMarkWarning: Unknown pytest.mark.real_gpt - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.real_gpt

tests\integration\test_einstein_demo_real.py:455
  D:\2025-Epita-Intelligence-Symbolique\tests\integration\test_einstein_demo_real.py:455: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.performance

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:42
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:42: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:101
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:101: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:138
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:138: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:144
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:144: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:186
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:186: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:198
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:198: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:47
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:47: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:60
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:60: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:74
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:74: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:88
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:88: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:107
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:107: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:113
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:113: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:132
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:132: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:152
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:152: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

argumentation_analysis\utils\dev_tools\env_checks.py:20
  D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\utils\dev_tools\env_checks.py:20: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
    import pkg_resources # Pour parser les requirements

C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pkg_resources\__init__.py:3146
  C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pkg_resources\__init__.py:3146: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('google')`.
  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages
    declare_namespace(pkg)

tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:48
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:48: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog # Marqueur pour activer les logs DEBUG pour ce test si besoin

tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:63
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:63: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog # Marqueur pour activer les logs DEBUG pour ce test si besoin

tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:83
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:83: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog # Marqueur pour activer les logs DEBUG pour ce test si besoin

tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:109
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:109: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog # Marqueur pour activer les logs DEBUG pour ce test si besoin

tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:147
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:147: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog # Marqueur pour activer les logs DEBUG pour ce test si besoin

tests\validation\test_scripts_execution.py:185
  D:\2025-Epita-Intelligence-Symbolique\tests\validation\test_scripts_execution.py:185: PytestUnknownMarkWarning: Unknown pytest.mark.validation - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.validation

tests\validation\test_scripts_execution.py:360
  D:\2025-Epita-Intelligence-Symbolique\tests\validation\test_scripts_execution.py:360: PytestUnknownMarkWarning: Unknown pytest.mark.validation - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.validation

tests\validation\test_scripts_execution.py:445
  D:\2025-Epita-Intelligence-Symbolique\tests\validation\test_scripts_execution.py:445: PytestUnknownMarkWarning: Unknown pytest.mark.validation - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.validation

tests\validation_sherlock_watson\test_phase_b_naturalite_dialogue.py:37
  D:\2025-Epita-Intelligence-Symbolique\tests\validation_sherlock_watson\test_phase_b_naturalite_dialogue.py:37: PytestCollectionWarning: cannot collect test class 'TestPhaseB' because it has a __init__ constructor (from: tests/validation_sherlock_watson/test_phase_b_naturalite_dialogue.py)
    class TestPhaseB:

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
ERROR tests/agents/tools/analysis/enhanced/test_enhanced_contextual_fallacy_analyzer.py
ERROR tests/config/test_config_real_gpt.py
ERROR tests/functional/test_agent_collaboration_workflow.py
ERROR tests/functional/test_argument_analyzer.py
ERROR tests/functional/test_argument_reconstructor.py
ERROR tests/functional/test_fallacy_detector.py
ERROR tests/functional/test_logic_graph.py
ERROR tests/functional/test_webapp_homepage.py
ERROR tests/integration/test_sherlock_watson_moriarty_real_gpt.py
ERROR tests/performance/test_oracle_performance.py
ERROR tests/robustness/test_error_handling.py
ERROR tests/unit/argumentation_analysis/nlp/test_embedding_utils.py - OSError...
ERROR tests/unit/argumentation_analysis/pipelines/test_embedding_pipeline.py
ERROR tests/unit/argumentation_analysis/pipelines/test_reporting_pipeline.py
ERROR tests/unit/argumentation_analysis/test_hierarchical_integration.py
ERROR tests/unit/argumentation_analysis/test_hierarchical_performance.py
ERROR tests/unit/argumentation_analysis/test_operational_agents_integration.py
!!!!!!!!!!!!!!!!!! Interrupted: 17 errors during collection !!!!!!!!!!!!!!!!!!!
======================= 48 warnings, 17 errors in 6.55s =======================
