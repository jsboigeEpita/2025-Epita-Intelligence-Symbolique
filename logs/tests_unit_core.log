============================= test session starts =============================
platform win32 -- Python 3.10.18, pytest-8.4.0, pluggy-1.6.0 -- C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\python.exe
cachedir: .pytest_cache
rootdir: D:\2025-Epita-Intelligence-Symbolique
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.1.1, mock-3.14.1
asyncio: mode=strict, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 1075 items

tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_extract_from_name_success ERROR [  0%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_extract_from_name_large_text ERROR [  0%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_extract_from_name_json_error ERROR [  0%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_update_extract_markers_invalid_result ERROR [  0%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_update_extract_markers_invalid_indices ERROR [  0%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_add_new_extract_invalid_result ERROR [  0%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_add_new_extract_invalid_source_index ERROR [  0%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractResult::test_from_dict PASSED [  0%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractResult::test_from_dict_with_missing_fields PASSED [  0%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractResult::test_init PASSED [  0%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractResult::test_to_dict PASSED [  1%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractAgentPlugin::test_extract_blocks PASSED [  1%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractAgentPlugin::test_find_similar_markers_with_custom_function PASSED [  1%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractAgentPlugin::test_find_similar_markers_with_default_function PASSED [  1%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractAgentPlugin::test_get_extract_results PASSED [  1%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractAgentPlugin::test_init PASSED [  1%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractAgentPlugin::test_search_text_dichotomically PASSED [  1%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractDefinition::test_from_dict PASSED [  1%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractDefinition::test_from_dict_with_missing_fields PASSED [  1%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractDefinition::test_init PASSED [  1%]
tests/unit/argumentation_analysis/agents/core/extract/test_extract_definitions.py::TestExtractDefinition::test_to_dict PASSED [  1%]
tests/unit/argumentation_analysis/agents/core/informal/test_informal_definitions.py::TestInformalAnalysisPlugin::test_explore_fallacy_hierarchy FAILED [  2%]
tests/unit/argumentation_analysis/agents/core/informal/test_informal_definitions.py::TestInformalAnalysisPlugin::test_get_fallacy_details PASSED [  2%]
tests/unit/argumentation_analysis/agents/core/informal/test_informal_definitions.py::TestInformalAnalysisPlugin::test_get_taxonomy_dataframe PASSED [  2%]
tests/unit/argumentation_analysis/agents/core/informal/test_informal_definitions.py::TestInformalAnalysisPlugin::test_initialization PASSED [  2%]
tests/unit/argumentation_analysis/agents/core/informal/test_informal_definitions.py::TestInformalAnalysisPlugin::test_internal_explore_hierarchy FAILED [  2%]
tests/unit/argumentation_analysis/agents/core/informal/test_informal_definitions.py::TestInformalAnalysisPlugin::test_internal_get_children_details FAILED [  2%]

=================================== ERRORS ====================================
______ ERROR at setup of TestExtractAgent.test_extract_from_name_success ______
tests\unit\argumentation_analysis\agents\core\extract\test_extract_agent.py:33: in extract_agent_setup
    agent = ExtractAgent(kernel=mock_sk_kernel)
E   TypeError: Can't instantiate abstract class ExtractAgent with abstract methods get_response, invoke
---------------------------- Captured stdout setup ----------------------------
2025-06-07 06:34:08,173 - tests.mocks.jpype_setup - INFO - Test test_extract_from_name_success: REAL JPype forc� par la variable d'environnement USE_REAL_JPYPE.
2025-06-07 06:34:08,173 - tests.mocks.jpype_setup - INFO - Test test_extract_from_name_success demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.
____ ERROR at setup of TestExtractAgent.test_extract_from_name_large_text _____
tests\unit\argumentation_analysis\agents\core\extract\test_extract_agent.py:33: in extract_agent_setup
    agent = ExtractAgent(kernel=mock_sk_kernel)
E   TypeError: Can't instantiate abstract class ExtractAgent with abstract methods get_response, invoke
---------------------------- Captured stdout setup ----------------------------
2025-06-07 06:34:08,432 - tests.mocks.jpype_setup - INFO - Test test_extract_from_name_large_text: REAL JPype forc� par la variable d'environnement USE_REAL_JPYPE.
2025-06-07 06:34:08,432 - tests.mocks.jpype_setup - INFO - Test test_extract_from_name_large_text demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.
____ ERROR at setup of TestExtractAgent.test_extract_from_name_json_error _____
tests\unit\argumentation_analysis\agents\core\extract\test_extract_agent.py:33: in extract_agent_setup
    agent = ExtractAgent(kernel=mock_sk_kernel)
E   TypeError: Can't instantiate abstract class ExtractAgent with abstract methods get_response, invoke
---------------------------- Captured stdout setup ----------------------------
2025-06-07 06:34:08,438 - tests.mocks.jpype_setup - INFO - Test test_extract_from_name_json_error: REAL JPype forc� par la variable d'environnement USE_REAL_JPYPE.
2025-06-07 06:34:08,438 - tests.mocks.jpype_setup - INFO - Test test_extract_from_name_json_error demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.
_ ERROR at setup of TestExtractAgent.test_update_extract_markers_invalid_result _
tests\unit\argumentation_analysis\agents\core\extract\test_extract_agent.py:33: in extract_agent_setup
    agent = ExtractAgent(kernel=mock_sk_kernel)
E   TypeError: Can't instantiate abstract class ExtractAgent with abstract methods get_response, invoke
---------------------------- Captured stdout setup ----------------------------
2025-06-07 06:34:08,444 - tests.mocks.jpype_setup - INFO - Test test_update_extract_markers_invalid_result: REAL JPype forc� par la variable d'environnement USE_REAL_JPYPE.
2025-06-07 06:34:08,444 - tests.mocks.jpype_setup - INFO - Test test_update_extract_markers_invalid_result demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.
_ ERROR at setup of TestExtractAgent.test_update_extract_markers_invalid_indices _
tests\unit\argumentation_analysis\agents\core\extract\test_extract_agent.py:33: in extract_agent_setup
    agent = ExtractAgent(kernel=mock_sk_kernel)
E   TypeError: Can't instantiate abstract class ExtractAgent with abstract methods get_response, invoke
---------------------------- Captured stdout setup ----------------------------
2025-06-07 06:34:08,449 - tests.mocks.jpype_setup - INFO - Test test_update_extract_markers_invalid_indices: REAL JPype forc� par la variable d'environnement USE_REAL_JPYPE.
2025-06-07 06:34:08,449 - tests.mocks.jpype_setup - INFO - Test test_update_extract_markers_invalid_indices demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.
___ ERROR at setup of TestExtractAgent.test_add_new_extract_invalid_result ____
tests\unit\argumentation_analysis\agents\core\extract\test_extract_agent.py:33: in extract_agent_setup
    agent = ExtractAgent(kernel=mock_sk_kernel)
E   TypeError: Can't instantiate abstract class ExtractAgent with abstract methods get_response, invoke
---------------------------- Captured stdout setup ----------------------------
2025-06-07 06:34:08,455 - tests.mocks.jpype_setup - INFO - Test test_add_new_extract_invalid_result: REAL JPype forc� par la variable d'environnement USE_REAL_JPYPE.
2025-06-07 06:34:08,455 - tests.mocks.jpype_setup - INFO - Test test_add_new_extract_invalid_result demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.
_ ERROR at setup of TestExtractAgent.test_add_new_extract_invalid_source_index _
tests\unit\argumentation_analysis\agents\core\extract\test_extract_agent.py:33: in extract_agent_setup
    agent = ExtractAgent(kernel=mock_sk_kernel)
E   TypeError: Can't instantiate abstract class ExtractAgent with abstract methods get_response, invoke
---------------------------- Captured stdout setup ----------------------------
2025-06-07 06:34:08,461 - tests.mocks.jpype_setup - INFO - Test test_add_new_extract_invalid_source_index: REAL JPype forc� par la variable d'environnement USE_REAL_JPYPE.
2025-06-07 06:34:08,461 - tests.mocks.jpype_setup - INFO - Test test_add_new_extract_invalid_source_index demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.
================================== FAILURES ===================================
__________ TestInformalAnalysisPlugin.test_explore_fallacy_hierarchy __________
tests\unit\argumentation_analysis\agents\core\informal\test_informal_definitions.py:175: in test_explore_fallacy_hierarchy
    self.assertEqual(result_pk1["current_node"]["nom_vulgaris�"], "Pertinence")
E   KeyError: 'nom_vulgaris�'
---------------------------- Captured stdout setup ----------------------------
2025-06-07 06:34:08,542 - tests.mocks.jpype_setup - INFO - Test test_explore_fallacy_hierarchy: REAL JPype forc� par la variable d'environnement USE_REAL_JPYPE.
2025-06-07 06:34:08,542 - tests.mocks.jpype_setup - INFO - Test test_explore_fallacy_hierarchy demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.
---------------------------- Captured stdout call -----------------------------
06:34:08 [INFO] [InformalAnalysisPlugin] Initialisation du plugin d'analyse des sophismes (taxonomy_file_path: None)...
06:34:08 [INFO] [InformalAnalysisPlugin] Utilisation du chemin de taxonomie par d�faut: D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\data\argumentum_fallacies_taxonomy.csv
06:34:08 [INFO] [InformalAnalysisPlugin] Exploration hi�rarchie sophismes depuis PK 1...
06:34:08 [INFO] [InformalAnalysisPlugin]  -> Hi�rarchie explor�e depuis PK 1: 1 enfants.
[DEBUG TEST] R�sultat de explore_fallacy_hierarchy pour PK 1: {'current_node': {'pk': 1, 'path': '', 'depth': 1, 'Name': '', 'nom_vulgarise': 'Pertinence', 'famille': '', 'description_courte': 'Sophisme de Pertinence'}, 'children': [{'pk': 2, 'nom_vulgarise': 'Attaque personnelle', 'description_courte': 'Ad Hominem', 'famille': '', 'has_children': False}], 'error': None}
------------------------------ Captured log call ------------------------------
INFO     InformalAnalysisPlugin:informal_definitions.py:99 Initialisation du plugin d'analyse des sophismes (taxonomy_file_path: None)...
INFO     InformalAnalysisPlugin:informal_definitions.py:110 Utilisation du chemin de taxonomie par d�faut: D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\data\argumentum_fallacies_taxonomy.csv
INFO     InformalAnalysisPlugin:informal_definitions.py:530 Exploration hi�rarchie sophismes depuis PK 1...
INFO     InformalAnalysisPlugin:informal_definitions.py:547  -> Hi�rarchie explor�e depuis PK 1: 1 enfants.
_________ TestInformalAnalysisPlugin.test_internal_explore_hierarchy __________
tests\unit\argumentation_analysis\agents\core\informal\test_informal_definitions.py:153: in test_internal_explore_hierarchy
    self.assertEqual(hierarchy_pk0["current_node"]["nom_vulgaris�"], "Sophismes")
2025-06-07 06:34:08,572 - tests.mocks.jpype_setup - INFO - jpype_setup.py: pytest_sessionfinish hook triggered. Exit status: 1
2025-06-07 06:34:08,572 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: sys.modules['jpype'] IS _REAL_JPYPE_MODULE. Le vrai JPype a potentiellement été utilisé.
2025-06-07 06:34:08,572 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: Tentative d'arrêt de la JVM via shutdown_jvm_if_needed() car le vrai JPype a potentiellement été utilisé.
06:34:08 [INFO] [Orchestration.JPype] JVM_SETUP: Appel de shutdown_jvm_if_needed.
06:34:08 [INFO] [Orchestration.JPype] JVM_SETUP: JVM n'était pas démarrée. Aucun arrêt nécessaire. isJVMStarted: False
2025-06-07 06:34:08,572 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: Vérification de l'état de la JVM après tentative d'arrêt.
2025-06-07 06:34:08,572 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: JVM encore démarrée après tentative d'arrêt: False
2025-06-07 06:34:08,572 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: destroy_jvm est False (selon config): False
2025-06-07 06:34:08,572 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: JVM non démarrée ou destroy_jvm est True. Pas de gestion spéciale de sys.modules pour atexit depuis ici.
E   KeyError: 'nom_vulgaris�'
---------------------------- Captured stdout setup ----------------------------
2025-06-07 06:34:08,556 - tests.mocks.jpype_setup - INFO - Test test_internal_explore_hierarchy: REAL JPype forc� par la variable d'environnement USE_REAL_JPYPE.
2025-06-07 06:34:08,556 - tests.mocks.jpype_setup - INFO - Test test_internal_explore_hierarchy demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.
---------------------------- Captured stdout call -----------------------------
06:34:08 [INFO] [InformalAnalysisPlugin] Initialisation du plugin d'analyse des sophismes (taxonomy_file_path: None)...
06:34:08 [INFO] [InformalAnalysisPlugin] Utilisation du chemin de taxonomie par d�faut: D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\data\argumentum_fallacies_taxonomy.csv
------------------------------ Captured log call ------------------------------
INFO     InformalAnalysisPlugin:informal_definitions.py:99 Initialisation du plugin d'analyse des sophismes (taxonomy_file_path: None)...
INFO     InformalAnalysisPlugin:informal_definitions.py:110 Utilisation du chemin de taxonomie par d�faut: D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\data\argumentum_fallacies_taxonomy.csv
________ TestInformalAnalysisPlugin.test_internal_get_children_details ________
tests\unit\argumentation_analysis\agents\core\informal\test_informal_definitions.py:138: in test_internal_get_children_details
    self.assertTrue(any(c['nom_vulgaris�'] == 'Pertinence' for c in children_pk0))
tests\unit\argumentation_analysis\agents\core\informal\test_informal_definitions.py:138: in <genexpr>
    self.assertTrue(any(c['nom_vulgaris�'] == 'Pertinence' for c in children_pk0))
E   KeyError: 'nom_vulgaris�'
---------------------------- Captured stdout setup ----------------------------
2025-06-07 06:34:08,562 - tests.mocks.jpype_setup - INFO - Test test_internal_get_children_details: REAL JPype forc� par la variable d'environnement USE_REAL_JPYPE.
2025-06-07 06:34:08,562 - tests.mocks.jpype_setup - INFO - Test test_internal_get_children_details demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.
---------------------------- Captured stdout call -----------------------------
06:34:08 [INFO] [InformalAnalysisPlugin] Initialisation du plugin d'analyse des sophismes (taxonomy_file_path: None)...
06:34:08 [INFO] [InformalAnalysisPlugin] Utilisation du chemin de taxonomie par d�faut: D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\data\argumentum_fallacies_taxonomy.csv
------------------------------ Captured log call ------------------------------
INFO     InformalAnalysisPlugin:informal_definitions.py:99 Initialisation du plugin d'analyse des sophismes (taxonomy_file_path: None)...
INFO     InformalAnalysisPlugin:informal_definitions.py:110 Utilisation du chemin de taxonomie par d�faut: D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\data\argumentum_fallacies_taxonomy.csv
============================== warnings summary ===============================
C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pydantic\_internal\_config.py:291
  C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pydantic\_internal\_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pydantic\_internal\_config.py:341
  C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pydantic\_internal\_config.py:341: UserWarning: Valid config keys have changed in V2:
  * 'allow_population_by_field_name' has been renamed to 'populate_by_name'
    warnings.warn(message, UserWarning)

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:42
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:42: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:101
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:101: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:138
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:138: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:144
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:144: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:186
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:186: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:198
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_code_formatting_utils.py:198: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:47
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:47: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:60
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:60: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:74
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:74: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:88
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:88: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:107
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:107: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:113
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:113: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:132
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:132: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:152
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_encoding_utils.py:152: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog

argumentation_analysis\utils\dev_tools\env_checks.py:20
  D:\2025-Epita-Intelligence-Symbolique\argumentation_analysis\utils\dev_tools\env_checks.py:20: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
    import pkg_resources # Pour parser les requirements

C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pkg_resources\__init__.py:3146
  C:\Users\MYIA\.conda\envs\epita_symbolic_ai_sherlock\lib\site-packages\pkg_resources\__init__.py:3146: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('google')`.
  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages
    declare_namespace(pkg)

tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:48
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:48: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog # Marqueur pour activer les logs DEBUG pour ce test si besoin

tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:63
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:63: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog # Marqueur pour activer les logs DEBUG pour ce test si besoin

tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:83
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:83: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog # Marqueur pour activer les logs DEBUG pour ce test si besoin

tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:109
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:109: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog # Marqueur pour activer les logs DEBUG pour ce test si besoin

tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:147
  D:\2025-Epita-Intelligence-Symbolique\tests\unit\argumentation_analysis\utils\dev_tools\test_format_utils.py:147: PytestUnknownMarkWarning: Unknown pytest.mark.debuglog - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.debuglog # Marqueur pour activer les logs DEBUG pour ce test si besoin

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
FAILED tests/unit/argumentation_analysis/agents/core/informal/test_informal_definitions.py::TestInformalAnalysisPlugin::test_explore_fallacy_hierarchy
FAILED tests/unit/argumentation_analysis/agents/core/informal/test_informal_definitions.py::TestInformalAnalysisPlugin::test_internal_explore_hierarchy
FAILED tests/unit/argumentation_analysis/agents/core/informal/test_informal_definitions.py::TestInformalAnalysisPlugin::test_internal_get_children_details
ERROR tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_extract_from_name_success
ERROR tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_extract_from_name_large_text
ERROR tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_extract_from_name_json_error
ERROR tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_update_extract_markers_invalid_result
ERROR tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_update_extract_markers_invalid_indices
ERROR tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_add_new_extract_invalid_result
ERROR tests/unit/argumentation_analysis/agents/core/extract/test_extract_agent.py::TestExtractAgent::test_add_new_extract_invalid_source_index
!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 10 failures !!!!!!!!!!!!!!!!!!!!!!!!!!
============= 3 failed, 17 passed, 23 warnings, 7 errors in 3.22s =============
