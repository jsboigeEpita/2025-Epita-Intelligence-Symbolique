{
  "summary": {
    "timestamp": "2025-06-07T14:28:40.260610",
    "total_duration": 7.753220558166504,
    "tests_run": 5,
    "tests_passed": 2,
    "tests_failed": 3,
    "coverage_enabled": false,
    "verbose_mode": false
  },
  "detailed_results": {
    "config_validation": {
      "success": true,
      "returncode": 0,
      "stdout": "Import successful\nConfig valid: LogicType.FOL\n",
      "stderr": "",
      "duration": 0.04445481300354004,
      "command": "C:\\Python312\\python.exe -c from config.unified_config import UnifiedConfig, PresetConfigs; print('Import successful'); config = PresetConfigs.authentic_fol(); print(f'Config valid: {config.logic_type}')"
    },
    "unit_tests": {
      "success": false,
      "returncode": 1,
      "stdout": "..............FF...F.FFF.F....F..F.                                      [100%]\n================================== FAILURES ===================================\n__________________ TestPresetConfigs.test_development_preset __________________\ntests\\unit\\config\\test_unified_config.py:340: in test_development_preset\n    config = PresetConfigs.development()\nconfig\\unified_config.py:261: in development\n    return UnifiedConfig(\n<string>:31: in __init__\n    ???\nconfig\\unified_config.py:123: in __post_init__\n    self._validate_configuration()\nconfig\\unified_config.py:145: in _validate_configuration\n    raise ValueError(\"FOL_LOGIC agent nécessite enable_jvm=True\")\nE   ValueError: FOL_LOGIC agent nécessite enable_jvm=True\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:34,986 - tests.mocks.jpype_setup - INFO - Test test_development_preset: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:34,986 - tests.mocks.jpype_setup - INFO - Test test_development_preset demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n____________________ TestPresetConfigs.test_testing_preset ____________________\ntests\\unit\\config\\test_unified_config.py:351: in test_testing_preset\n    config = PresetConfigs.testing()\nconfig\\unified_config.py:276: in testing\n    return UnifiedConfig(\n<string>:31: in __init__\n    ???\nconfig\\unified_config.py:123: in __post_init__\n    self._validate_configuration()\nconfig\\unified_config.py:132: in _validate_configuration\n    raise ValueError(\nE   ValueError: Configuration incohérente: mock_level=full mais require_real_* activé. Pour l'authenticité 100%, utilisez mock_level=none.\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:35,158 - tests.mocks.jpype_setup - INFO - Test test_testing_preset: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:35,159 - tests.mocks.jpype_setup - INFO - Test test_testing_preset demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n_______________ TestConfigUtilities.test_validate_config_errors _______________\ntests\\unit\\config\\test_unified_config.py:412: in test_validate_config_errors\n    config = UnifiedConfig(\n<string>:31: in __init__\n    ???\nconfig\\unified_config.py:123: in __post_init__\n    self._validate_configuration()\nconfig\\unified_config.py:132: in _validate_configuration\n    raise ValueError(\nE   ValueError: Configuration incohérente: mock_level=partial mais require_real_* activé. Pour l'authenticité 100%, utilisez mock_level=none.\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:35,169 - tests.mocks.jpype_setup - INFO - Test test_validate_config_errors: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:35,169 - tests.mocks.jpype_setup - INFO - Test test_validate_config_errors demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n______________ TestConfigurationCLI.test_logic_type_cli_argument ______________\nC:\\Python312\\Lib\\unittest\\mock.py:949: in assert_called_with\n    raise AssertionError(_error_message()) from cause\nE   AssertionError: expected call not found.\nE   Expected: warning(\"\\u26a0\\ufe0f Logique Modal s\\xe9lectionn\\xe9e - Risque d'\\xe9checs \\xe9lev\\xe9\")\nE     Actual: warning('  - JVM activée mais Tweety non-réel - Incohérent pour authenticité')\n\nDuring handling of the above exception, another exception occurred:\ntests\\unit\\scripts\\test_configuration_cli.py:105: in test_logic_type_cli_argument\n    mock_logger.warning.assert_called_with(\"\\u26a0\\ufe0f Logique Modal s\\xe9lectionn\\xe9e - Risque d'\\xe9checs \\xe9lev\\xe9\")\nE   AssertionError: expected call not found.\nE   Expected: warning(\"\\u26a0\\ufe0f Logique Modal s\\xe9lectionn\\xe9e - Risque d'\\xe9checs \\xe9lev\\xe9\")\nE     Actual: warning('  - JVM activée mais Tweety non-réel - Incohérent pour authenticité')\nE   \nE   pytest introspection follows:\nE   \nE   Args:\nE   assert ('  - JVM act...uthenticit\\xe9',) == (\"\\u26a0\\ufe0f Logique ...checs \\xe9lev\\xe9\",)\nE     \nE     At index 0 diff: '  - JVM activ\\xe9e mais Tweety non-r\\xe9el - Incoh\\xe9rent pour authenticit\\xe9' != \"\\u26a0\\ufe0f Logique Modal s\\xe9lectionn\\xe9e - Risque d'\\xe9checs \\xe9lev\\xe9\"\nE     Use -v to get more diff\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:35,177 - tests.mocks.jpype_setup - INFO - Test test_logic_type_cli_argument: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:35,178 - tests.mocks.jpype_setup - INFO - Test test_logic_type_cli_argument demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n---------------------------- Captured stdout call -----------------------------\n14:28:35 [INFO] [UnifiedTextAnalysisCLI] \\U0001f4cb Configuration dynamique unifi\\xe9e:\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Logique: fol\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Agents: ['informal', 'fol_logic', 'synthesis']\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Orchestration: unified\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Mock Level: none\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie: full\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 GPT: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 Tweety: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie compl\\xe8te: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI] \\U0001f4cb Configuration dynamique unifi\\xe9e:\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Logique: pl\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Agents: ['informal', 'fol_logic', 'synthesis']\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Orchestration: unified\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Mock Level: none\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie: full\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 GPT: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 Tweety: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie compl\\xe8te: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI] \\U0001f4cb Configuration dynamique unifi\\xe9e:\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Logique: pl\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Agents: ['informal', 'fol_logic', 'synthesis']\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Orchestration: unified\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Mock Level: none\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie: full\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 GPT: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 Tweety: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie compl\\xe8te: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI] \\U0001f4cb Configuration dynamique unifi\\xe9e:\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Logique: fol\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Agents: ['informal', 'fol_logic', 'synthesis']\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Orchestration: unified\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Mock Level: none\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie: full\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 GPT: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 Tweety: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie compl\\xe8te: True\n------------------------------ Captured log call ------------------------------\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:177 \\U0001f4cb Configuration dynamique unifi\\xe9e:\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:178   - Logique: fol\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:179   - Agents: ['informal', 'fol_logic', 'synthesis']\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:180   - Orchestration: unified\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:181   - Mock Level: none\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:182   - Taxonomie: full\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:183   - Authenticit\\xe9 GPT: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:184   - Authenticit\\xe9 Tweety: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:185   - Taxonomie compl\\xe8te: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:177 \\U0001f4cb Configuration dynamique unifi\\xe9e:\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:178   - Logique: pl\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:179   - Agents: ['informal', 'fol_logic', 'synthesis']\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:180   - Orchestration: unified\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:181   - Mock Level: none\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:182   - Taxonomie: full\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:183   - Authenticit\\xe9 GPT: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:184   - Authenticit\\xe9 Tweety: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:185   - Taxonomie compl\\xe8te: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:177 \\U0001f4cb Configuration dynamique unifi\\xe9e:\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:178   - Logique: pl\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:179   - Agents: ['informal', 'fol_logic', 'synthesis']\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:180   - Orchestration: unified\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:181   - Mock Level: none\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:182   - Taxonomie: full\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:183   - Authenticit\\xe9 GPT: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:184   - Authenticit\\xe9 Tweety: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:185   - Taxonomie compl\\xe8te: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:177 \\U0001f4cb Configuration dynamique unifi\\xe9e:\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:178   - Logique: fol\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:179   - Agents: ['informal', 'fol_logic', 'synthesis']\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:180   - Orchestration: unified\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:181   - Mock Level: none\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:182   - Taxonomie: full\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:183   - Authenticit\\xe9 GPT: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:184   - Authenticit\\xe9 Tweety: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:185   - Taxonomie compl\\xe8te: True\n______________ TestConfigurationCLI.test_mock_level_cli_argument ______________\ntests\\unit\\scripts\\test_configuration_cli.py:136: in test_mock_level_cli_argument\n    assert config.mock_level == MockLevel.FULL\nE   AssertionError: assert <MockLevel.NONE: 'none'> == <MockLevel.FULL: 'full'>\nE    +  where <MockLevel.NONE: 'none'> = UnifiedConfig(logic_type=<LogicType.FOL: 'fol'>, agents=[<AgentType.INFORMAL: 'informal'>, <AgentType.FOL_LOGIC: 'fol_...tion_logging=True, enable_trace_validation=True, verbose=False, timeout_seconds=300, max_retries=3, enable_cache=False).mock_level\nE    +  and   <MockLevel.FULL: 'full'> = MockLevel.FULL\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:35,202 - tests.mocks.jpype_setup - INFO - Test test_mock_level_cli_argument: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:35,202 - tests.mocks.jpype_setup - INFO - Test test_mock_level_cli_argument demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n---------------------------- Captured stdout call -----------------------------\n14:28:35 [INFO] [UnifiedTextAnalysisCLI] \\U0001f4cb Configuration dynamique unifi\\xe9e:\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Logique: fol\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Agents: ['informal', 'fol_logic', 'synthesis']\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Orchestration: unified\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Mock Level: none\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie: full\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 GPT: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 Tweety: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie compl\\xe8te: True\\n14:28:35 [WARNING] [UnifiedTextAnalysisCLI] \\u26a0\\ufe0f Probl\\xe8mes de configuration d\\xe9tect\\xe9s:\\n14:28:35 [WARNING] [UnifiedTextAnalysisCLI]   - JVM activ\\xe9e mais Tweety non-r\\xe9el - Incoh\\xe9rent pour authenticit\\xe9\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI] \\U0001f4cb Configuration dynamique unifi\\xe9e:\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Logique: fol\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Agents: ['informal', 'fol_logic', 'synthesis']\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Orchestration: unified\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Mock Level: partial\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie: full\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 GPT: False\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 Tweety: False\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie compl\\xe8te: False\\n14:28:35 [WARNING] [UnifiedTextAnalysisCLI] \\u26a0\\ufe0f Probl\\xe8mes de configuration d\\xe9tect\\xe9s:\\n14:28:35 [WARNING] [UnifiedTextAnalysisCLI]   - JVM activ\\xe9e mais Tweety non-r\\xe9el - Incoh\\xe9rent pour authenticit\\xe9\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI] \\U0001f4cb Configuration dynamique unifi\\xe9e:\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Logique: fol\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Agents: ['informal', 'fol_logic', 'synthesis']\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Orchestration: unified\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Mock Level: full\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie: full\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 GPT: False\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 Tweety: False\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie compl\\xe8te: False\n------------------------------ Captured log call ------------------------------\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:177 \\U0001f4cb Configuration dynamique unifi\\xe9e:\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:178   - Logique: fol\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:179   - Agents: ['informal', 'fol_logic', 'synthesis']\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:180   - Orchestration: unified\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:181   - Mock Level: none\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:182   - Taxonomie: full\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:183   - Authenticit\\xe9 GPT: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:184   - Authenticit\\xe9 Tweety: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:185   - Taxonomie compl\\xe8te: True\\nWARNING  UnifiedTextAnalysisCLI:analyze_text.py:172 \\u26a0\\ufe0f Probl\\xe8mes de configuration d\\xe9tect\\xe9s:\\nWARNING  UnifiedTextAnalysisCLI:analyze_text.py:174   - JVM activ\\xe9e mais Tweety non-r\\xe9el - Incoh\\xe9rent pour authenticit\\xe9\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:177 \\U0001f4cb Configuration dynamique unifi\\xe9e:\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:178   - Logique: fol\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:179   - Agents: ['informal', 'fol_logic', 'synthesis']\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:180   - Orchestration: unified\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:181   - Mock Level: partial\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:182   - Taxonomie: full\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:183   - Authenticit\\xe9 GPT: False\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:184   - Authenticit\\xe9 Tweety: False\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:185   - Taxonomie compl\\xe8te: False\\nWARNING  UnifiedTextAnalysisCLI:analyze_text.py:172 \\u26a0\\ufe0f Probl\\xe8mes de configuration d\\xe9tect\\xe9s:\\nWARNING  UnifiedTextAnalysisCLI:analyze_text.py:174   - JVM activ\\xe9e mais Tweety non-r\\xe9el - Incoh\\xe9rent pour authenticit\\xe9\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:177 \\U0001f4cb Configuration dynamique unifi\\xe9e:\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:178   - Logique: fol\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:179   - Agents: ['informal', 'fol_logic', 'synthesis']\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:180   - Orchestration: unified\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:181   - Mock Level: full\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:182   - Taxonomie: full\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:183   - Authenticit\\xe9 GPT: False\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:184   - Authenticit\\xe9 Tweety: False\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:185   - Taxonomie compl\\xe8te: False\n_______________ TestConfigurationCLI.test_taxonomy_cli_argument _______________\ntests\\unit\\scripts\\test_configuration_cli.py:151: in test_taxonomy_cli_argument\n    config = create_unified_config_from_args(args_mock)\nscripts\\main\\analyze_text.py:145: in create_unified_config_from_args\n    config = UnifiedConfig(\n<string>:31: in __init__\n    ???\nconfig\\unified_config.py:123: in __post_init__\n    self._validate_configuration()\nconfig\\unified_config.py:132: in _validate_configuration\n    raise ValueError(\nE   ValueError: Configuration incohérente: mock_level=partial mais require_real_* activé. Pour l'authenticité 100%, utilisez mock_level=none.\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:35,206 - tests.mocks.jpype_setup - INFO - Test test_taxonomy_cli_argument: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:35,206 - tests.mocks.jpype_setup - INFO - Test test_taxonomy_cli_argument demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n---------------------------- Captured stdout call -----------------------------\n14:28:35 [INFO] [UnifiedTextAnalysisCLI] \\U0001f4cb Configuration dynamique unifi\\xe9e:\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Logique: fol\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Agents: ['informal', 'fol_logic', 'synthesis']\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Orchestration: unified\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Mock Level: none\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie: full\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 GPT: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 Tweety: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie compl\\xe8te: True2025-06-07 14:28:35,242 - tests.mocks.jpype_setup - INFO - jpype_setup.py: pytest_sessionfinish hook triggered. Exit status: 1\n2025-06-07 14:28:35,242 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: sys.modules['jpype'] IS _REAL_JPYPE_MODULE. Le vrai JPype a potentiellement Ã©tÃ© utilisÃ©.\n2025-06-07 14:28:35,242 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: Tentative d'arrÃªt de la JVM via shutdown_jvm_if_needed() car le vrai JPype a potentiellement Ã©tÃ© utilisÃ©.\n14:28:35 [INFO] [Orchestration.JPype] JVM_SETUP: Appel de shutdown_jvm_if_needed.\n14:28:35 [DEBUG] [tests.mocks.jpype_components.jvm] isJVMStarted() appelÃ©e. Retourne: False\n14:28:35 [DEBUG] [tests.mocks.jpype_components.jvm] isJVMStarted() appelÃ©e. Retourne: False\n14:28:35 [INFO] [Orchestration.JPype] JVM_SETUP: JVM n'Ã©tait pas dÃ©marrÃ©e. Aucun arrÃªt nÃ©cessaire. isJVMStarted: False\n2025-06-07 14:28:35,242 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: VÃ©rification de l'Ã©tat de la JVM aprÃ¨s tentative d'arrÃªt.\n14:28:35 [DEBUG] [tests.mocks.jpype_components.jvm] isJVMStarted() appelÃ©e. Retourne: False\n2025-06-07 14:28:35,242 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: JVM encore dÃ©marrÃ©e aprÃ¨s tentative d'arrÃªt: False\n2025-06-07 14:28:35,242 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: destroy_jvm est False (selon config): False\n2025-06-07 14:28:35,242 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: JVM non dÃ©marrÃ©e ou destroy_jvm est True. Pas de gestion spÃ©ciale de sys.modules pour atexit depuis ici.\n\n------------------------------ Captured log call ------------------------------\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:177 \\U0001f4cb Configuration dynamique unifi\\xe9e:\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:178   - Logique: fol\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:179   - Agents: ['informal', 'fol_logic', 'synthesis']\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:180   - Orchestration: unified\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:181   - Mock Level: none\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:182   - Taxonomie: full\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:183   - Authenticit\\xe9 GPT: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:184   - Authenticit\\xe9 Tweety: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:185   - Taxonomie compl\\xe8te: True\n________________ TestConfigurationCLI.test_agents_cli_argument ________________\ntests\\unit\\scripts\\test_configuration_cli.py:199: in test_agents_cli_argument\n    assert config.agents == expected_agents\nE   AssertionError: assert [<AgentType.I... 'synthesis'>] == [<AgentType.I... 'synthesis'>]\nE     \nE     At index 1 diff: <AgentType.FOL_LOGIC: 'fol_logic'> != <AgentType.LOGIC: 'logic'>\nE     Use -v to get more diff\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:35,217 - tests.mocks.jpype_setup - INFO - Test test_agents_cli_argument: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:35,217 - tests.mocks.jpype_setup - INFO - Test test_agents_cli_argument demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n---------------------------- Captured stdout call -----------------------------\n14:28:35 [INFO] [UnifiedTextAnalysisCLI] \\U0001f4cb Configuration dynamique unifi\\xe9e:\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Logique: fol\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Agents: ['informal', 'fol_logic', 'synthesis']\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Orchestration: unified\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Mock Level: none\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie: full\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 GPT: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Authenticit\\xe9 Tweety: True\\n14:28:35 [INFO] [UnifiedTextAnalysisCLI]   - Taxonomie compl\\xe8te: True\n------------------------------ Captured log call ------------------------------\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:177 \\U0001f4cb Configuration dynamique unifi\\xe9e:\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:178   - Logique: fol\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:179   - Agents: ['informal', 'fol_logic', 'synthesis']\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:180   - Orchestration: unified\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:181   - Mock Level: none\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:182   - Taxonomie: full\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:183   - Authenticit\\xe9 GPT: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:184   - Authenticit\\xe9 Tweety: True\\nINFO     UnifiedTextAnalysisCLI:analyze_text.py:185   - Taxonomie compl\\xe8te: True\n___________ TestConfigurationCLI.test_conversion_to_pipeline_config ___________\ntests\\unit\\scripts\\test_configuration_cli.py:305: in test_conversion_to_pipeline_config\n    unified_config = UnifiedConfig(\n<string>:31: in __init__\n    ???\nconfig\\unified_config.py:123: in __post_init__\n    self._validate_configuration()\nconfig\\unified_config.py:132: in _validate_configuration\n    raise ValueError(\nE   ValueError: Configuration incohérente: mock_level=partial mais require_real_* activé. Pour l'authenticité 100%, utilisez mock_level=none.\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:35,225 - tests.mocks.jpype_setup - INFO - Test test_conversion_to_pipeline_config: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:35,225 - tests.mocks.jpype_setup - INFO - Test test_conversion_to_pipeline_config demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n________________ TestConfigurationCLI.test_validation_warnings ________________\ntests\\unit\\scripts\\test_configuration_cli.py:392: in test_validation_warnings\n    assert len(warning_calls) == 0\nE   AssertionError: assert 1 == 0\nE    +  where 1 = len([call('\\u26a0\\ufe0f Probl\\xe8mes de configuration d\\xe9tect\\xe9s:')])\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:35,234 - tests.mocks.jpype_setup - INFO - Test test_validation_warnings: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:35,235 - tests.mocks.jpype_setup - INFO - Test test_validation_warnings demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n============================== warnings summary ===============================\nC:\\Users\\MYIA\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:291\n  C:\\Users\\MYIA\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\nC:\\Users\\MYIA\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:341\n  C:\\Users\\MYIA\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:341: UserWarning: Valid config keys have changed in V2:\n  * 'allow_population_by_field_name' has been renamed to 'populate_by_name'\n    warnings.warn(message, UserWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests\\unit\\config\\test_unified_config.py::TestPresetConfigs::test_development_preset\nFAILED tests\\unit\\config\\test_unified_config.py::TestPresetConfigs::test_testing_preset\nFAILED tests\\unit\\config\\test_unified_config.py::TestConfigUtilities::test_validate_config_errors\nFAILED tests\\unit\\scripts\\test_configuration_cli.py::TestConfigurationCLI::test_logic_type_cli_argument\nFAILED tests\\unit\\scripts\\test_configuration_cli.py::TestConfigurationCLI::test_mock_level_cli_argument\nFAILED tests\\unit\\scripts\\test_configuration_cli.py::TestConfigurationCLI::test_taxonomy_cli_argument\nFAILED tests\\unit\\scripts\\test_configuration_cli.py::TestConfigurationCLI::test_agents_cli_argument\nFAILED tests\\unit\\scripts\\test_configuration_cli.py::TestConfigurationCLI::test_conversion_to_pipeline_config\nFAILED tests\\unit\\scripts\\test_configuration_cli.py::TestConfigurationCLI::test_validation_warnings\n9 failed, 26 passed, 2 warnings in 2.34s\n",
      "stderr": "C:\\Users\\MYIA\\AppData\\Roaming\\Python\\Python312\\site-packages\\pytest_asyncio\\plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
      "duration": 2.9979805946350098,
      "command": "C:\\Python312\\python.exe -m pytest -q --tb=short tests/unit/config/test_unified_config.py tests/unit/scripts/test_configuration_cli.py"
    },
    "integration_tests": {
      "success": false,
      "returncode": 1,
      "stdout": ".FF....F..FF.                                                            [100%]2025-06-07 14:28:38,113 - tests.mocks.jpype_setup - INFO - jpype_setup.py: pytest_sessionfinish hook triggered. Exit status: 1\n2025-06-07 14:28:38,113 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: sys.modules['jpype'] IS _REAL_JPYPE_MODULE. Le vrai JPype a potentiellement Ã©tÃ© utilisÃ©.\n2025-06-07 14:28:38,113 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: Tentative d'arrÃªt de la JVM via shutdown_jvm_if_needed() car le vrai JPype a potentiellement Ã©tÃ© utilisÃ©.\n14:28:38 [INFO] [Orchestration.JPype] JVM_SETUP: Appel de shutdown_jvm_if_needed.\n14:28:38 [DEBUG] [tests.mocks.jpype_components.jvm] isJVMStarted() appelÃ©e. Retourne: False\n14:28:38 [DEBUG] [tests.mocks.jpype_components.jvm] isJVMStarted() appelÃ©e. Retourne: False\n14:28:38 [INFO] [Orchestration.JPype] JVM_SETUP: JVM n'Ã©tait pas dÃ©marrÃ©e. Aucun arrÃªt nÃ©cessaire. isJVMStarted: False\n2025-06-07 14:28:38,113 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: VÃ©rification de l'Ã©tat de la JVM aprÃ¨s tentative d'arrÃªt.\n14:28:38 [DEBUG] [tests.mocks.jpype_components.jvm] isJVMStarted() appelÃ©e. Retourne: False\n2025-06-07 14:28:38,113 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: JVM encore dÃ©marrÃ©e aprÃ¨s tentative d'arrÃªt: False\n2025-06-07 14:28:38,113 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: destroy_jvm est False (selon config): False\n2025-06-07 14:28:38,113 - tests.mocks.jpype_setup - INFO -    pytest_sessionfinish: JVM non dÃ©marrÃ©e ou destroy_jvm est True. Pas de gestion spÃ©ciale de sys.modules pour atexit depuis ici.\n\n================================== FAILURES ===================================\n_____ TestUnifiedConfigIntegration.test_development_workflow_integration ______\ntests\\unit\\integration\\test_unified_config_integration.py:64: in test_development_workflow_integration\n    config = PresetConfigs.development()\nconfig\\unified_config.py:261: in development\n    return UnifiedConfig(\n<string>:31: in __init__\n    ???\nconfig\\unified_config.py:123: in __post_init__\n    self._validate_configuration()\nconfig\\unified_config.py:145: in _validate_configuration\n    raise ValueError(\"FOL_LOGIC agent nécessite enable_jvm=True\")\nE   ValueError: FOL_LOGIC agent nécessite enable_jvm=True\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:35,914 - tests.mocks.jpype_setup - INFO - Test test_development_workflow_integration utilise MOCK JPype.\n2025-06-07 14:28:35,914 - tests.mocks.jpype_setup - INFO - État (_jvm_started, _jvm_path, config.jvm_path) du mock JPype réinitialisé pour le test.\n-------------------------- Captured stdout teardown ---------------------------\n2025-06-07 14:28:35,950 - tests.mocks.jpype_setup - INFO - État de JPype restauré après test test_development_workflow_integration (utilisation du mock).\n______ TestUnifiedConfigIntegration.test_testing_configuration_isolation ______\ntests\\unit\\integration\\test_unified_config_integration.py:83: in test_testing_configuration_isolation\n    config = PresetConfigs.testing()\nconfig\\unified_config.py:276: in testing\n    return UnifiedConfig(\n<string>:31: in __init__\n    ???\nconfig\\unified_config.py:123: in __post_init__\n    self._validate_configuration()\nconfig\\unified_config.py:132: in _validate_configuration\n    raise ValueError(\nE   ValueError: Configuration incohérente: mock_level=full mais require_real_* activé. Pour l'authenticité 100%, utilisez mock_level=none.\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:35,950 - tests.mocks.jpype_setup - INFO - Test test_testing_configuration_isolation utilise MOCK JPype.\n2025-06-07 14:28:35,950 - tests.mocks.jpype_setup - INFO - État (_jvm_started, _jvm_path, config.jvm_path) du mock JPype réinitialisé pour le test.\n-------------------------- Captured stdout teardown ---------------------------\n2025-06-07 14:28:35,957 - tests.mocks.jpype_setup - INFO - État de JPype restauré après test test_testing_configuration_isolation (utilisation du mock).\n_____ TestUnifiedConfigIntegration.test_performance_configuration_impact ______\ntests\\unit\\integration\\test_unified_config_integration.py:238: in test_performance_configuration_impact\n    fast_config = PresetConfigs.testing()\nconfig\\unified_config.py:276: in testing\n    return UnifiedConfig(\n<string>:31: in __init__\n    ???\nconfig\\unified_config.py:123: in __post_init__\n    self._validate_configuration()\nconfig\\unified_config.py:132: in _validate_configuration\n    raise ValueError(\nE   ValueError: Configuration incohérente: mock_level=full mais require_real_* activé. Pour l'authenticité 100%, utilisez mock_level=none.\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:37,973 - tests.mocks.jpype_setup - INFO - Test test_performance_configuration_impact: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:37,973 - tests.mocks.jpype_setup - INFO - Test test_performance_configuration_impact demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n______ TestUnifiedConfigIntegration.test_real_configuration_stress_test _______\ntests\\unit\\integration\\test_unified_config_integration.py:358: in test_real_configuration_stress_test\n    errors = validate_config(config)\nE   NameError: name 'validate_config' is not defined\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:38,099 - tests.mocks.jpype_setup - INFO - Test test_real_configuration_stress_test: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:38,099 - tests.mocks.jpype_setup - INFO - Test test_real_configuration_stress_test demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n__ TestConfigurationDocumentation.test_configuration_examples_documentation ___\ntests\\unit\\integration\\test_unified_config_integration.py:375: in test_configuration_examples_documentation\n    \"config\": PresetConfigs.development(),\nconfig\\unified_config.py:261: in development\n    return UnifiedConfig(\n<string>:31: in __init__\n    ???\nconfig\\unified_config.py:123: in __post_init__\n    self._validate_configuration()\nconfig\\unified_config.py:145: in _validate_configuration\n    raise ValueError(\"FOL_LOGIC agent nécessite enable_jvm=True\")\nE   ValueError: FOL_LOGIC agent nécessite enable_jvm=True\n---------------------------- Captured stdout setup ----------------------------\n2025-06-07 14:28:38,103 - tests.mocks.jpype_setup - INFO - Test test_configuration_examples_documentation: REAL JPype forcé par la variable d'environnement USE_REAL_JPYPE.\n2025-06-07 14:28:38,103 - tests.mocks.jpype_setup - INFO - Test test_configuration_examples_documentation demande REAL JPype. Configuration de sys.modules pour utiliser le vrai JPype.\n============================== warnings summary ===============================\ntests\\unit\\integration\\test_unified_config_integration.py:314\n  D:\\2025-Epita-Intelligence-Symbolique-4\\tests\\unit\\integration\\test_unified_config_integration.py:314: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.slow\n\nunit/integration/test_unified_config_integration.py::TestUnifiedConfigIntegration::test_cli_integration_mapping\n  C:\\Users\\MYIA\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\nunit/integration/test_unified_config_integration.py::TestUnifiedConfigIntegration::test_cli_integration_mapping\n  C:\\Users\\MYIA\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:341: UserWarning: Valid config keys have changed in V2:\n  * 'allow_population_by_field_name' has been renamed to 'populate_by_name'\n    warnings.warn(message, UserWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests\\unit\\integration\\test_unified_config_integration.py::TestUnifiedConfigIntegration::test_development_workflow_integration\nFAILED tests\\unit\\integration\\test_unified_config_integration.py::TestUnifiedConfigIntegration::test_testing_configuration_isolation\nFAILED tests\\unit\\integration\\test_unified_config_integration.py::TestUnifiedConfigIntegration::test_performance_configuration_impact\nFAILED tests\\unit\\integration\\test_unified_config_integration.py::TestUnifiedConfigIntegration::test_real_configuration_stress_test\nFAILED tests\\unit\\integration\\test_unified_config_integration.py::TestConfigurationDocumentation::test_configuration_examples_documentation\n5 failed, 8 passed, 3 warnings in 2.24s\n",
      "stderr": "C:\\Users\\MYIA\\AppData\\Roaming\\Python\\Python312\\site-packages\\pytest_asyncio\\plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
      "duration": 2.792391061782837,
      "command": "C:\\Python312\\python.exe -m pytest -q --tb=short tests/unit/integration/test_unified_config_integration.py"
    },
    "performance_tests": {
      "success": true,
      "returncode": 0,
      "stdout": "Creation time: 0.000s\nValidation time: 0.000s\nTotal configs: 100\n",
      "stderr": "",
      "duration": 0.042237043380737305,
      "command": "C:\\Python312\\python.exe -c \nimport time\nfrom config.unified_config import UnifiedConfig, PresetConfigs, LogicType, MockLevel\n\n# Test de création rapide de configurations\nstart_time = time.time()\nconfigs = []\n\nfor i in range(100):\n    config = UnifiedConfig(\n        logic_type=LogicType.FOL,\n        mock_level=MockLevel.NONE\n    )\n    configs.append(config)\n\ncreation_time = time.time() - start_time\n\n# Test de validation\nstart_time = time.time()\nfor config in configs:\n    config.to_dict()\nvalidation_time = time.time() - start_time\n\nprint(f\"Creation time: {creation_time:.3f}s\")\nprint(f\"Validation time: {validation_time:.3f}s\")\nprint(f\"Total configs: {len(configs)}\")\n\n# Critères de performance\nif creation_time > 1.0:\n    print(\"WARNING: Config creation too slow\")\nif validation_time > 0.5:\n    print(\"WARNING: Config validation too slow\")\n"
    },
    "cli_tests": {
      "success": false,
      "returncode": 1,
      "stdout": "Configuration UTF-8 chargee automatiquement\n",
      "stderr": null,
      "duration": 0.9720058441162109,
      "command": "powershell -ExecutionPolicy Bypass -File D:\\2025-Epita-Intelligence-Symbolique-4\\tests\\scripts\\test_unified_config_cli.ps1 -TestSuite Basic"
    }
  },
  "environment": {
    "python_version": "3.12.9 (tags/v3.12.9:fdb8142, Feb  4 2025, 15:27:58) [MSC v.1942 64 bit (AMD64)]",
    "platform": "win32",
    "project_root": "D:\\2025-Epita-Intelligence-Symbolique-4"
  }
}
