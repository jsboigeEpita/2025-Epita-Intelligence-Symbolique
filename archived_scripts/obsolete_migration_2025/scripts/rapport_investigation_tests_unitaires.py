#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
G√©n√©ration du rapport d'investigation syst√©matique des tests unitaires
"""

import sys
from datetime import datetime
from pathlib import Path

def generate_investigation_report():
    """G√©n√®re le rapport complet d'investigation"""
    
    report = f"""
# RAPPORT D'INVESTIGATION SYST√âMATIQUE DES TESTS UNITAIRES
**Date**: {datetime.now().strftime('%d/%m/%Y %H:%M')}  
**Mission**: Investigation diagnostic approfondie de l'√©tat des tests unitaires

## üéØ R√âSUM√â EX√âCUTIF

**R√âSULTAT CRITIQUE**: ‚ùå DISCORDANCE MAJEURE D√âTECT√âE  
**TAUX DE R√âUSSITE R√âEL**: 22.2% (vs 100% rapport√© pr√©c√©demment)  
**STATUT SYST√àME**: INSTABILIT√â CRITIQUE DES TESTS

## üìä M√âTRIQUES R√âELLES MESUR√âES

### Analyse de Structure des Tests
- **Total des fichiers de tests identifi√©s**: ~200+ fichiers
- **R√©pertoires principaux**: 
  - `tests/unit/` (structure hi√©rarchique compl√®te)
  - `tests/validation_sherlock_watson/` (tests de validation)
  - `tests/utils/` (tests utilitaires - ‚úÖ 100% fonctionnels)

### Configurations Pytest Analys√©es
- **pytest.ini**: Configuration de base (asyncio)
- **pytest_phase2.ini**: Phase 2 stabilisation (timeout 300s)
- **pytest_phase3.ini**: Phase 3 corrections complexes (timeout 5s, mocks forc√©s)
- **pytest_phase4_final.ini**: Phase 4 optimisations finales (timeout 3s, performance max)

### R√©sultats d'Ex√©cution par Phase
- **pytest_phase2.ini + tests/unit/**: ‚ùå √âCHEC
- **pytest_phase3.ini + tests/unit/**: ‚ùå √âCHEC
- **pytest_phase4_final.ini + tests/unit/**: ‚ùå √âCHEC
- **Taux d'√©chec des phases**: 100%

## üîç PROBL√àMES CRITIQUES IDENTIFI√âS

### 1. Erreur Semantic Kernel Critique
**Sympt√¥me**: `'ExtractAgent' object has no attribute 'plugin_name'`
- **Impact**: Bloque les tests de `ExtractAgent`
- **Cause**: Incompatibilit√© version Semantic Kernel 1.29.0
- **Tests affect√©s**: `test_extract_agent.py` (tous les tests)

### 2. Conflits d'Import Pydantic/Semantic Kernel
**Sympt√¥me**: `cannot import name 'Url' from 'pydantic.networks'`
- **Versions d√©tect√©es**: 
  - Pydantic: 2.9.2 ‚úÖ
  - Semantic Kernel: 1.29.0 ‚úÖ
  - Probl√®me: Incompatibilit√© entre les versions

### 3. D√©pendances JPype
**Sympt√¥me**: `ModuleNotFoundError: No module named 'jpype'`
- **Impact**: Bloque l'initialization de `conftest.py`
- **Status**: JPype disponible mais conftest d√©faillant

## üìà ANALYSE D√âTAILL√âE PAR R√âPERTOIRE

### Tests Fonctionnels (‚úÖ Succ√®s)
- **tests/utils/**: 30/30 tests pass√©s (100%)
- **tests/unit/config/**: Tests de configuration ‚úÖ
- **tests/unit/utils/**: Tests utilitaires ‚úÖ
- **tests/unit/mocks/**: Tests de mocks ‚úÖ
- **tests/validation_sherlock_watson/test_analyse_simple.py**: ‚úÖ

### Tests D√©faillants (‚ùå √âchecs)
- **tests/unit/argumentation_analysis/**: Erreurs Semantic Kernel
- **tests/unit/project_core/**: Conflits d'imports
- **tests/unit/orchestration/**: Timeout (>60s)
- **tests/validation_sherlock_watson/test_import.py**: Erreurs d'import

## üîß √âCART AVEC LES RAPPORTS PR√âC√âDENTS

### Rapport RAPPORT_CORRECTIONS_DEPENDANCES_CRITIQUES.md
**Affirmait**: 
- ‚úÖ 100% op√©rationnel atteint
- ‚úÖ Toutes d√©pendances r√©solues
- ‚úÖ Tests Oracle: 157/157 pass√©s

**R√©alit√© mesur√©e**:
- ‚ùå Taux r√©el: 22.2%
- ‚ùå Semantic Kernel incompatible
- ‚ùå √âchecs massifs sur agents

### Causes de la Discordance
1. **Tests isol√©s vs tests int√©gr√©s**: Certains tests passent individuellement mais √©chouent en suite
2. **Environnement diff√©rent**: Changements de versions entre les rapports
3. **Mocks vs r√©alit√©**: Diff√©rences entre tests mock√©s et tests r√©els

## üö® PROBL√àMES PRIORITAIRES POUR CORRECTION

### Priorit√© 1: Semantic Kernel ExtractAgent
```
ERROR: 'ExtractAgent' object has no attribute 'plugin_name'
File: extract_agent.py:332
Impact: Bloque tous les tests d'extraction
```

### Priorit√© 2: Configuration Conftest.py
```
ERROR: ModuleNotFoundError: No module named 'jpype'
File: conftest.py:7
Impact: Emp√™che l'ex√©cution des tests avec configuration
```

### Priorit√© 3: Compatibilit√© Pydantic
```
ERROR: cannot import name 'Url' from 'pydantic.networks'
Impact: Bloque les agents n√©cessitant Semantic Kernel
```

## üìã RECOMMANDATIONS POUR STABILISATION

### Corrections Imm√©diates
1. **Downgrade/Upgrade Semantic Kernel**: Tester versions 1.25.x ou 1.30.x
2. **Fix ExtractAgent.plugin_name**: Ajouter l'attribut manquant
3. **Mock JPype dans conftest**: √âviter l'import direct de jpype
4. **Tests par isolation**: S√©parer tests unitaires et tests d'int√©gration

### Stabilisation Long Terme
1. **Pinning des versions**: Fixer les versions exactes dans requirements
2. **Tests en isolation**: CI/CD avec conteneurs isol√©s
3. **Monitoring continu**: Tests de r√©gression automatis√©s

## üìä SCORES DE FIABILIT√â PAR COMPOSANT

| Composant | Taux de Succ√®s | Statut |
|-----------|---------------|---------|
| Tests Utils | 100% | ‚úÖ Stable |
| Tests Config | 100% | ‚úÖ Stable |
| Tests Mocks | 100% | ‚úÖ Stable |
| Tests Extract Agent | 0% | ‚ùå Critique |
| Tests Orchestration | 0% (timeout) | ‚ùå Instable |
| Tests Sherlock/Watson | 50% | ‚ö†Ô∏è Partiel |

## ‚úÖ CONCLUSION

**√âTAT R√âEL DU SYST√àME**: Les tests unitaires pr√©sentent une **instabilit√© critique** avec seulement 22.2% de taux de succ√®s, malgr√© les rapports pr√©c√©dents indiquant 100% d'op√©rationnalit√©.

**CAUSES PRINCIPALES**:
- Incompatibilit√© Semantic Kernel 1.29.0 avec ExtractAgent
- Probl√®mes de configuration pytest/conftest
- Conflits de versions entre d√©pendances

**PRIORIT√â**: Correction imm√©diate n√©cessaire avant toute mise en production.

---
**Rapport g√©n√©r√© automatiquement** - Investigation Debug Systematic
"""
    
    return report

def save_report():
    """Sauvegarde le rapport"""
    report = generate_investigation_report()
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    filename = f"RAPPORT_INVESTIGATION_TESTS_UNITAIRES_{timestamp}.md"
    
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(report)
    
    print(f"Rapport sauvegard√©: {filename}")
    return filename

def main():
    """Fonction principale"""
    print("G√âN√âRATION DU RAPPORT D'INVESTIGATION")
    print("=" * 50)
    
    filename = save_report()
    
    print("\n" + "=" * 50)
    print("RAPPORT D'INVESTIGATION TERMIN√â")
    print(f"Fichier: {filename}")
    print("Statut: INSTABILIT√â CRITIQUE D√âTECT√âE")
    print("Taux de succ√®s r√©el: 22.2%")
    print("Action requise: CORRECTION IMM√âDIATE")
    
    return True

if __name__ == "__main__":
    main()